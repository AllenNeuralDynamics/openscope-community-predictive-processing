<?xml version="1.0" encoding="utf-8"?>
<WorkflowBuilder Version="2.8.5"
                 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                 xmlns:gl="clr-namespace:Bonsai.Shaders;assembly=Bonsai.Shaders"
                 xmlns:res="clr-namespace:Bonsai.Resources;assembly=Bonsai.System"
                 xmlns:rx="clr-namespace:Bonsai.Reactive;assembly=Bonsai.Core"
                 xmlns:scr="clr-namespace:Bonsai.Scripting.Expressions;assembly=Bonsai.Scripting.Expressions"
                 xmlns:wie="clr-namespace:Bonsai.Windows.Input;assembly=Bonsai.Windows.Input"
                 xmlns:io="clr-namespace:Bonsai.IO;assembly=Bonsai.System"
                 xmlns:p1="clr-namespace:Aind.Behavior.Amt10Encoder;assembly=Aind.Behavior.Amt10Encoder"
                 xmlns:p2="clr-namespace:Aind.Ni.DigitalOutput.Configuration;assembly=Aind.Ni.DigitalOutput.Configuration"
                 xmlns="https://bonsai-rx.org/2018/workflow">
  <Workflow>
    <Nodes>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="gl:CreateWindow">
          <gl:Width>560</gl:Width>
          <gl:Height>480</gl:Height>
          <gl:VSync>On</gl:VSync>
          <gl:SwapSync>true</gl:SwapSync>
          <gl:ClearColor>Transparent</gl:ClearColor>
          <gl:ClearMask>DepthBufferBit ColorBufferBit</gl:ClearMask>
          <gl:CursorVisible>false</gl:CursorVisible>
          <gl:Location xsi:nil="true" />
          <gl:WindowBorder>Fixed</gl:WindowBorder>
          <gl:WindowState>Normal</gl:WindowState>
          <gl:DisplayDevice>Primary</gl:DisplayDevice>
          <gl:TargetRenderFrequency>60</gl:TargetRenderFrequency>
          <gl:TargetUpdateFrequency>120</gl:TargetUpdateFrequency>
          <gl:RenderState />
          <gl:GraphicsMode>
            <gl:ColorFormat>
              <gl:Red>8</gl:Red>
              <gl:Green>8</gl:Green>
              <gl:Blue>8</gl:Blue>
              <gl:Alpha>8</gl:Alpha>
            </gl:ColorFormat>
            <gl:Depth>16</gl:Depth>
            <gl:Stencil>0</gl:Stencil>
            <gl:Samples>0</gl:Samples>
            <gl:AccumulatorFormat>
              <gl:Red>0</gl:Red>
              <gl:Green>0</gl:Green>
              <gl:Blue>0</gl:Blue>
              <gl:Alpha>0</gl:Alpha>
            </gl:AccumulatorFormat>
            <gl:Buffers>2</gl:Buffers>
            <gl:Stereo>false</gl:Stereo>
          </gl:GraphicsMode>
        </Combinator>
      </Expression>
      <Expression xsi:type="IncludeWorkflow" Path="BonVision:Primitives.BonVisionResources.bonsai" />
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="gl:TextureResources">
          <gl:Textures>
            <gl:TextureConfiguration xsi:type="gl:VideoTexture">
              <gl:Name>Zebra</gl:Name>
              <gl:Width xsi:nil="true" />
              <gl:Height xsi:nil="true" />
              <gl:InternalFormat>Rgba</gl:InternalFormat>
              <gl:WrapS>Repeat</gl:WrapS>
              <gl:WrapT>Repeat</gl:WrapT>
              <gl:MinFilter>Linear</gl:MinFilter>
              <gl:MagFilter>Linear</gl:MagFilter>
              <gl:FileName>movies\zebra_allen_screen_tscale_30_scale_10.mp4</gl:FileName>
              <gl:FlipMode>Vertical</gl:FlipMode>
              <gl:FrameCount xsi:nil="true" />
              <gl:StartPosition>0</gl:StartPosition>
              <gl:BufferLength xsi:nil="true" />
            </gl:TextureConfiguration>
            <gl:TextureConfiguration xsi:type="gl:VideoTexture">
              <gl:Name>Trippy</gl:Name>
              <gl:Width xsi:nil="true" />
              <gl:Height xsi:nil="true" />
              <gl:InternalFormat>Rgba</gl:InternalFormat>
              <gl:WrapS>Repeat</gl:WrapS>
              <gl:WrapT>Repeat</gl:WrapT>
              <gl:MinFilter>Linear</gl:MinFilter>
              <gl:MagFilter>Linear</gl:MagFilter>
              <gl:FileName>movies\Compressed_MATLAB_trippy_150s_1920x1200_30fps_120x95.mp4</gl:FileName>
              <gl:FlipMode>Vertical</gl:FlipMode>
              <gl:FrameCount xsi:nil="true" />
              <gl:StartPosition>0</gl:StartPosition>
              <gl:BufferLength xsi:nil="true" />
            </gl:TextureConfiguration>
          </gl:Textures>
        </Combinator>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="gl:ShaderResources">
          <gl:Shaders />
        </Combinator>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="res:LoadResources" />
      </Expression>
      <Expression xsi:type="ExternalizedMapping">
        <Property Name="Value" DisplayName="sync_sqr" />
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="BooleanProperty">
          <Value>true</Value>
        </Combinator>
      </Expression>
      <Expression xsi:type="rx:Condition">
        <Workflow>
          <Nodes>
            <Expression xsi:type="WorkflowInput">
              <Name>Source1</Name>
            </Expression>
            <Expression xsi:type="WorkflowOutput" />
          </Nodes>
          <Edges>
            <Edge From="0" To="1" Label="Source1" />
          </Edges>
        </Workflow>
      </Expression>
      <Expression xsi:type="ExternalizedMapping">
        <Property Name="Photodiode_ExtentX" />
        <Property Name="Photodiode_ExtentY" />
        <Property Name="Photodiode_LocationX" />
        <Property Name="Photodiode_LocationY" />
        <Property Name="sync_sqr_freq" />
      </Expression>
      <Expression xsi:type="rx:SelectMany">
        <Workflow>
          <Nodes>
            <Expression xsi:type="SubscribeSubject">
              <Name>Draw</Name>
            </Expression>
            <Expression xsi:type="SubscribeSubject">
              <Name>StartExpt</Name>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="rx:SubscribeWhen" />
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="gl:RenderFrame" />
            </Expression>
            <Expression xsi:type="SubscribeSubject">
              <Name>StartExpt</Name>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="rx:SubscribeWhen" />
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="rx:ElementIndex" />
            </Expression>
            <Expression xsi:type="MemberSelector">
              <Selector>Index</Selector>
            </Expression>
            <Expression xsi:type="ExternalizedMapping">
              <Property Name="Value" DisplayName="sync_sqr_freq" />
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="FloatProperty">
                <Value>0.5</Value>
              </Combinator>
            </Expression>
            <Expression xsi:type="scr:ExpressionTransform">
              <scr:Expression>Convert.ToInt32(60 / (it / 2))</scr:Expression>
            </Expression>
            <Expression xsi:type="PropertyMapping">
              <PropertyMappings>
                <Property Name="Value" />
              </PropertyMappings>
            </Expression>
            <Expression xsi:type="Mod">
              <Operand xsi:type="IntProperty">
                <Value>240</Value>
              </Operand>
            </Expression>
            <Expression xsi:type="scr:ExpressionTransform">
              <scr:Expression>Convert.ToInt32(60 / it)</scr:Expression>
            </Expression>
            <Expression xsi:type="PropertyMapping">
              <PropertyMappings>
                <Property Name="Value" />
              </PropertyMappings>
            </Expression>
            <Expression xsi:type="Divide">
              <Operand xsi:type="IntProperty">
                <Value>120</Value>
              </Operand>
            </Expression>
            <Expression xsi:type="PropertyMapping">
              <PropertyMappings>
                <Property Name="ColorR" />
                <Property Name="ColorG" />
                <Property Name="ColorB" />
              </PropertyMappings>
            </Expression>
            <Expression xsi:type="ExternalizedMapping">
              <Property Name="ExtentX" DisplayName="Photodiode_ExtentX" />
              <Property Name="ExtentY" DisplayName="Photodiode_ExtentY" />
              <Property Name="LocationX" DisplayName="Photodiode_LocationX" />
              <Property Name="LocationY" DisplayName="Photodiode_LocationY" />
            </Expression>
            <Expression xsi:type="IncludeWorkflow" Path="BonVision:Primitives.DrawQuad.bonsai">
              <ExtentX>8</ExtentX>
              <ExtentY>8</ExtentY>
              <LocationX>59</LocationX>
              <LocationY>28</LocationY>
              <Layer>2</Layer>
              <Angle>0</Angle>
              <ColorR>0</ColorR>
              <ColorG>0</ColorG>
              <ColorB>0</ColorB>
              <ColorA>1</ColorA>
            </Expression>
            <Expression xsi:type="MemberSelector">
              <Selector>X</Selector>
            </Expression>
            <Expression xsi:type="IncludeWorkflow" Path="BonVision:Logging.LogEvent.bonsai">
              <Format>Photodiode-{0}</Format>
              <Selector xsi:nil="true" />
              <Name>Allen.Log</Name>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="rx:DistinctUntilChanged" />
            </Expression>
            <Expression xsi:type="rx:Condition">
              <Workflow>
                <Nodes>
                  <Expression xsi:type="WorkflowInput">
                    <Name>Source1</Name>
                  </Expression>
                  <Expression xsi:type="Equal">
                    <Operand xsi:type="FloatProperty">
                      <Value>0</Value>
                    </Operand>
                  </Expression>
                  <Expression xsi:type="WorkflowOutput" />
                </Nodes>
                <Edges>
                  <Edge From="0" To="1" Label="Source1" />
                  <Edge From="1" To="2" Label="Source1" />
                </Edges>
              </Workflow>
            </Expression>
            <Expression xsi:type="WorkflowOutput" />
          </Nodes>
          <Edges>
            <Edge From="0" To="2" Label="Source1" />
            <Edge From="1" To="2" Label="Source2" />
            <Edge From="2" To="18" Label="Source1" />
            <Edge From="3" To="5" Label="Source1" />
            <Edge From="4" To="5" Label="Source2" />
            <Edge From="5" To="6" Label="Source1" />
            <Edge From="6" To="7" Label="Source1" />
            <Edge From="7" To="12" Label="Source1" />
            <Edge From="8" To="9" Label="Source1" />
            <Edge From="9" To="10" Label="Source1" />
            <Edge From="9" To="13" Label="Source1" />
            <Edge From="10" To="11" Label="Source1" />
            <Edge From="11" To="12" Label="Source2" />
            <Edge From="12" To="15" Label="Source1" />
            <Edge From="13" To="14" Label="Source1" />
            <Edge From="14" To="15" Label="Source2" />
            <Edge From="15" To="16" Label="Source1" />
            <Edge From="16" To="18" Label="Source2" />
            <Edge From="17" To="18" Label="Source3" />
            <Edge From="18" To="19" Label="Source1" />
            <Edge From="19" To="20" Label="Source1" />
            <Edge From="20" To="21" Label="Source1" />
            <Edge From="21" To="22" Label="Source1" />
            <Edge From="22" To="23" Label="Source1" />
          </Edges>
        </Workflow>
      </Expression>
      <Expression xsi:type="rx:Condition">
        <Workflow>
          <Nodes>
            <Expression xsi:type="WorkflowInput">
              <Name>Source1</Name>
            </Expression>
            <Expression xsi:type="Equal">
              <Operand xsi:type="BooleanProperty">
                <Value>false</Value>
              </Operand>
            </Expression>
            <Expression xsi:type="WorkflowOutput" />
          </Nodes>
          <Edges>
            <Edge From="0" To="1" Label="Source1" />
            <Edge From="1" To="2" Label="Source1" />
          </Edges>
        </Workflow>
      </Expression>
      <Expression xsi:type="rx:SelectMany">
        <Workflow>
          <Nodes>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="gl:RenderFrame" />
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="FloatProperty">
                <Value>0</Value>
              </Combinator>
            </Expression>
            <Expression xsi:type="WorkflowOutput" />
            <Expression xsi:type="WorkflowInput">
              <Name>Source1</Name>
            </Expression>
          </Nodes>
          <Edges>
            <Edge From="0" To="1" Label="Source1" />
            <Edge From="1" To="2" Label="Source1" />
          </Edges>
        </Workflow>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="rx:Merge" />
      </Expression>
      <Expression xsi:type="rx:PublishSubject">
        <Name>EndReady</Name>
      </Expression>
      <Expression xsi:type="SubscribeSubject">
        <Name>EndSession</Name>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="rx:TakeUntil" />
      </Expression>
      <Expression xsi:type="SubscribeSubject">
        <Name>EndExpt</Name>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="StringProperty">
          <Value>END</Value>
        </Combinator>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="rx:Take">
          <rx:Count>1</rx:Count>
        </Combinator>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="wie:KeyDown">
          <wie:Filter>End</wie:Filter>
          <wie:SuppressRepetitions>false</wie:SuppressRepetitions>
        </Combinator>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="StringProperty">
          <Value>END</Value>
        </Combinator>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="rx:Take">
          <rx:Count>1</rx:Count>
        </Combinator>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="rx:Merge" />
      </Expression>
      <Expression xsi:type="SubscribeSubject">
        <Name>EndReady</Name>
      </Expression>
      <Expression xsi:type="SubscribeSubject">
        <Name>EndExpt</Name>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="rx:SkipUntil" />
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="rx:Zip" />
      </Expression>
      <Expression xsi:type="IncludeWorkflow" Path="BonVision:Logging.LogEvent.bonsai">
        <Format>END</Format>
        <Selector xsi:nil="true" />
        <Name>Allen.Log</Name>
      </Expression>
      <Expression xsi:type="rx:PublishSubject">
        <Name>EndSession</Name>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="gl:Delay">
          <gl:DueTime>PT1S</gl:DueTime>
        </Combinator>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="rx:Take">
          <rx:Count>1</rx:Count>
        </Combinator>
      </Expression>
      <Expression xsi:type="WorkflowOutput" />
      <Expression xsi:type="ExternalizedMapping">
        <Property Name="RootFolder" />
        <Property Name="Subject" />
      </Expression>
      <Expression xsi:type="IncludeWorkflow" Path="AllenNeuralDynamics.Core:GenerateRootLoggingPath.bonsai">
        <RootFolder>C:/BonsaiDataPredictiveProcessing</RootFolder>
        <Subject>769904</Subject>
        <DateTimeOffset>0001-01-01T00:00:00.0000000+00:00</DateTimeOffset>
        <SubjectName>LoggingRootPath</SubjectName>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="gl:RenderFrame" />
      </Expression>
      <Expression xsi:type="IncludeWorkflow" Path="BonVision:Environment.OrthographicView.bonsai">
        <Left>-90</Left>
        <Right>90</Right>
        <Bottom>-50</Bottom>
        <Top>50</Top>
      </Expression>
      <Expression xsi:type="rx:PublishSubject">
        <Name>Draw</Name>
      </Expression>
      <Expression xsi:type="IncludeWorkflow" Path="BonVision:Environment.SphereMapping.bonsai">
        <ClearColor>Gray</ClearColor>
        <Width xsi:nil="true" />
        <Height xsi:nil="true" />
        <RotationZ>0</RotationZ>
        <RotationY>0</RotationY>
        <RotationX>0</RotationX>
        <FaceSize xsi:nil="true" />
      </Expression>
      <Expression xsi:type="IncludeWorkflow" Path="BonVision:Environment.ViewWindow.bonsai">
        <Width>51.8</Width>
        <Height>32.4</Height>
        <Rotation>
          <X>0</X>
          <Y>0</Y>
          <Z>0</Z>
        </Rotation>
        <Translation>
          <X>0</X>
          <Y>0</Y>
          <Z>-15.1</Z>
        </Translation>
      </Expression>
      <Expression xsi:type="IncludeWorkflow" Path="BonVision:Environment.GammaCorrection.bonsai">
        <ClearColor>Gray</ClearColor>
        <GammaLut>..\..\..\Gamma\Rigs\2025-07-03-NP1-gammalut.bmp</GammaLut>
      </Expression>
      <Expression xsi:type="ExternalizedMapping">
        <Property Name="Value" DisplayName="stimulus_table_path" />
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="StringProperty">
          <Value>C:\BonsaiDataPredictiveProcessingTest\openscope-community-predictive-processing\code\stimulus-control\src\Mindscope\examples\test_short.csv</Value>
        </Combinator>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="gl:RenderFrame" />
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="rx:Take">
          <rx:Count>1</rx:Count>
        </Combinator>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="rx:SubscribeWhen" />
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="rx:Take">
          <rx:Count>1</rx:Count>
        </Combinator>
      </Expression>
      <Expression xsi:type="rx:SelectMany">
        <Workflow>
          <Nodes>
            <Expression xsi:type="WorkflowInput">
              <Name>Source1</Name>
            </Expression>
            <Expression xsi:type="PropertyMapping">
              <PropertyMappings>
                <Property Name="FileName" />
              </PropertyMappings>
            </Expression>
            <Expression xsi:type="io:CsvReader">
              <io:FileName>C:\BonsaiDataPredictiveProcessingTest\openscope-community-predictive-processing\code\stimulus-control\src\Mindscope\examples\test_short.csv</io:FileName>
              <io:ListSeparator>,</io:ListSeparator>
              <io:SkipRows>1</io:SkipRows>
            </Expression>
            <Expression xsi:type="WorkflowOutput" />
          </Nodes>
          <Edges>
            <Edge From="0" To="1" Label="Source1" />
            <Edge From="1" To="2" Label="Source1" />
            <Edge From="2" To="3" Label="Source1" />
          </Edges>
        </Workflow>
      </Expression>
      <Expression xsi:type="scr:ExpressionTransform">
        <scr:Expression>new(
Int32.Parse(it[0]) as BlockNumber,
it[1] as BlockLabel,
Double.Parse(it[2]) as BlockDurationMinutes,
Int32.Parse(it[3]) as TrialNumber,
Int32.Parse(it[4]) as SequenceNumber,
Int32.Parse(it[5]) as TrialInSequence,
Double.Parse(it[6]) as Contrast,
Double.Parse(it[7]) as Delay,
Double.Parse(it[8]) as DiameterX,
Double.Parse(it[9]) as DiameterY,
Double.Parse(it[10]) as Duration,
Double.Parse(it[11]) * Math.PI / 180 as Orientation,
Double.Parse(it[12]) as SpatialFrequency,
Double.Parse(it[13]) as TemporalFrequency,
Double.Parse(it[14]) as X,
Double.Parse(it[15]) as Y,
it[16] as Phase,
it[17] as TrialType,
it[18] as BlockType,
Guid.NewGuid().ToString() as Id)</scr:Expression>
      </Expression>
      <Expression xsi:type="ExternalizedMapping">
        <Property Name="DueTime" DisplayName="SettingUpDelay" />
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="gl:Delay">
          <gl:DueTime>PT10S</gl:DueTime>
        </Combinator>
      </Expression>
      <Expression xsi:type="SubscribeSubject">
        <Name>TemporalPhase</Name>
      </Expression>
      <Expression xsi:type="PropertyMapping">
        <PropertyMappings>
          <Property Name="Phase" />
        </PropertyMappings>
      </Expression>
      <Expression xsi:type="GroupWorkflow">
        <Name>GenericSequence</Name>
        <Workflow>
          <Nodes>
            <Expression xsi:type="WorkflowInput">
              <Name>Source1</Name>
            </Expression>
            <Expression xsi:type="ExternalizedMapping">
              <Property Name="Phase" />
            </Expression>
            <Expression xsi:type="rx:CreateObservable">
              <Workflow>
                <Nodes>
                  <Expression xsi:type="WorkflowInput">
                    <Name>Source1</Name>
                  </Expression>
                  <Expression xsi:type="rx:Condition">
                    <Workflow>
                      <Nodes>
                        <Expression xsi:type="WorkflowInput">
                          <Name>Source1</Name>
                        </Expression>
                        <Expression xsi:type="MemberSelector">
                          <Selector>BlockType</Selector>
                        </Expression>
                        <Expression xsi:type="Equal">
                          <Operand xsi:type="StringProperty">
                            <Value>movie</Value>
                          </Operand>
                        </Expression>
                        <Expression xsi:type="WorkflowOutput" />
                      </Nodes>
                      <Edges>
                        <Edge From="0" To="1" Label="Source1" />
                        <Edge From="1" To="2" Label="Source1" />
                        <Edge From="2" To="3" Label="Source1" />
                      </Edges>
                    </Workflow>
                  </Expression>
                  <Expression xsi:type="rx:CreateObservable">
                    <Name>Movies</Name>
                    <Workflow>
                      <Nodes>
                        <Expression xsi:type="WorkflowInput">
                          <Name>Source1</Name>
                        </Expression>
                        <Expression xsi:type="rx:AsyncSubject">
                          <Name>Parameters</Name>
                        </Expression>
                        <Expression xsi:type="SubscribeSubject">
                          <Name>Draw</Name>
                        </Expression>
                        <Expression xsi:type="SubscribeSubject">
                          <Name>Parameters</Name>
                        </Expression>
                        <Expression xsi:type="PropertyMapping">
                          <PropertyMappings>
                            <Property Name="Angle" Selector="Orientation" />
                            <Property Name="ExtentX" Selector="DiameterX" />
                            <Property Name="ExtentY" Selector="DiameterY" />
                            <Property Name="LocationX" Selector="X" />
                            <Property Name="LocationY" Selector="Y" />
                            <Property Name="TextureName" Selector="BlockLabel" />
                          </PropertyMappings>
                        </Expression>
                        <Expression xsi:type="IncludeWorkflow" Path="BonVision:Primitives.DrawVideo.bonsai">
                          <TextureName>Trippy</TextureName>
                          <PlaybackRate>30</PlaybackRate>
                          <Loop>false</Loop>
                          <Angle>0</Angle>
                          <ExtentX>120</ExtentX>
                          <ExtentY>95</ExtentY>
                          <LocationX>0</LocationX>
                          <LocationY>0</LocationY>
                          <ScaleX>1</ScaleX>
                          <ScaleY>1</ScaleY>
                          <ShiftX>0</ShiftX>
                          <ShiftY>0</ShiftY>
                          <Layer>0</Layer>
                        </Expression>
                        <Expression xsi:type="IncludeWorkflow" Path="BonVision:Logging.LogEvent.bonsai">
                          <Format>MovieFrame-{0}</Format>
                          <Selector>it</Selector>
                          <Name>Allen.Log</Name>
                        </Expression>
                        <Expression xsi:type="SubscribeSubject">
                          <Name>Parameters</Name>
                        </Expression>
                        <Expression xsi:type="scr:ExpressionTransform">
                          <scr:Expression>TimeSpan.FromSeconds(Duration)</scr:Expression>
                        </Expression>
                        <Expression xsi:type="PropertyMapping">
                          <PropertyMappings>
                            <Property Name="DueTime" />
                          </PropertyMappings>
                        </Expression>
                        <Expression xsi:type="Combinator">
                          <Combinator xsi:type="gl:Timer">
                            <gl:DueTime>PT10S</gl:DueTime>
                          </Combinator>
                        </Expression>
                        <Expression xsi:type="Combinator">
                          <Combinator xsi:type="gl:SampleOnRenderFrame" />
                        </Expression>
                        <Expression xsi:type="SubscribeSubject">
                          <Name>Parameters</Name>
                        </Expression>
                        <Expression xsi:type="Combinator">
                          <Combinator xsi:type="rx:Zip" />
                        </Expression>
                        <Expression xsi:type="IncludeWorkflow" Path="BonVision:Logging.LogEvent.bonsai">
                          <Format>StimEnd-{0}</Format>
                          <Selector>Item2.Id</Selector>
                          <Name>Allen.Log</Name>
                        </Expression>
                        <Expression xsi:type="Combinator">
                          <Combinator xsi:type="rx:TakeUntil" />
                        </Expression>
                        <Expression xsi:type="SubscribeSubject">
                          <Name>Parameters</Name>
                        </Expression>
                        <Expression xsi:type="scr:ExpressionTransform">
                          <scr:Expression>TimeSpan.FromSeconds(Delay)</scr:Expression>
                        </Expression>
                        <Expression xsi:type="PropertyMapping">
                          <PropertyMappings>
                            <Property Name="DueTime" />
                          </PropertyMappings>
                        </Expression>
                        <Expression xsi:type="Combinator">
                          <Combinator xsi:type="gl:Timer">
                            <gl:DueTime>PT0S</gl:DueTime>
                          </Combinator>
                        </Expression>
                        <Expression xsi:type="SubscribeSubject">
                          <Name>Parameters</Name>
                        </Expression>
                        <Expression xsi:type="Combinator">
                          <Combinator xsi:type="rx:Zip" />
                        </Expression>
                        <Expression xsi:type="IncludeWorkflow" Path="BonVision:Logging.LogEvent.bonsai">
                          <Format>StimStart-{0}</Format>
                          <Selector>Item2.Id</Selector>
                          <Name>Allen.Log</Name>
                        </Expression>
                        <Expression xsi:type="Combinator">
                          <Combinator xsi:type="rx:SubscribeWhen" />
                        </Expression>
                        <Expression xsi:type="Combinator">
                          <Combinator xsi:type="rx:Last" />
                        </Expression>
                        <Expression xsi:type="SubscribeSubject">
                          <Name>Parameters</Name>
                        </Expression>
                        <Expression xsi:type="scr:ExpressionTransform">
                          <scr:Expression>new(
    it.Contrast as Contrast,
    it.Delay as Delay,
    it.DiameterX as DiameterX,
    it.DiameterY as DiameterY,
    it.Duration as Duration,
    it.Orientation as Orientation,
    it.SpatialFrequency as SpatialFrequency,
    it.TemporalFrequency as TemporalFrequency,
    it.X as X,
    it.Y as Y,
    Convert.ToDouble(0) as Phase,
    it.TrialType as TrialType,           
    it.BlockType as BlockType, 
    it.Id as Id,
    it.BlockNumber as BlockNumber, 
    it.BlockLabel as BlockLabel,
    it.TrialNumber as TrialNumber, 
    it.SequenceNumber as SequenceNumber,
    it.TrialInSequence as TrialInSequence
)</scr:Expression>
                        </Expression>
                        <Expression xsi:type="Combinator">
                          <Combinator xsi:type="rx:WithLatestFrom" />
                        </Expression>
                        <Expression xsi:type="scr:ExpressionTransform">
                          <scr:Expression>it.Item2</scr:Expression>
                        </Expression>
                        <Expression xsi:type="WorkflowOutput" />
                      </Nodes>
                      <Edges>
                        <Edge From="0" To="1" Label="Source1" />
                        <Edge From="2" To="5" Label="Source1" />
                        <Edge From="3" To="4" Label="Source1" />
                        <Edge From="4" To="5" Label="Source2" />
                        <Edge From="5" To="6" Label="Source1" />
                        <Edge From="6" To="15" Label="Source1" />
                        <Edge From="7" To="8" Label="Source1" />
                        <Edge From="8" To="9" Label="Source1" />
                        <Edge From="9" To="10" Label="Source1" />
                        <Edge From="10" To="11" Label="Source1" />
                        <Edge From="11" To="13" Label="Source1" />
                        <Edge From="12" To="13" Label="Source2" />
                        <Edge From="13" To="14" Label="Source1" />
                        <Edge From="14" To="15" Label="Source2" />
                        <Edge From="15" To="23" Label="Source1" />
                        <Edge From="16" To="17" Label="Source1" />
                        <Edge From="17" To="18" Label="Source1" />
                        <Edge From="18" To="19" Label="Source1" />
                        <Edge From="19" To="21" Label="Source1" />
                        <Edge From="20" To="21" Label="Source2" />
                        <Edge From="21" To="22" Label="Source1" />
                        <Edge From="22" To="23" Label="Source2" />
                        <Edge From="23" To="24" Label="Source1" />
                        <Edge From="24" To="27" Label="Source1" />
                        <Edge From="25" To="26" Label="Source1" />
                        <Edge From="26" To="27" Label="Source2" />
                        <Edge From="27" To="28" Label="Source1" />
                        <Edge From="28" To="29" Label="Source1" />
                      </Edges>
                    </Workflow>
                  </Expression>
                  <Expression xsi:type="rx:Condition">
                    <Workflow>
                      <Nodes>
                        <Expression xsi:type="WorkflowInput">
                          <Name>Source1</Name>
                        </Expression>
                        <Expression xsi:type="MemberSelector">
                          <Selector>BlockType</Selector>
                        </Expression>
                        <Expression xsi:type="NotEqual">
                          <Operand xsi:type="StringProperty">
                            <Value>movie</Value>
                          </Operand>
                        </Expression>
                        <Expression xsi:type="WorkflowOutput" />
                      </Nodes>
                      <Edges>
                        <Edge From="0" To="1" Label="Source1" />
                        <Edge From="1" To="2" Label="Source1" />
                        <Edge From="2" To="3" Label="Source1" />
                      </Edges>
                    </Workflow>
                  </Expression>
                  <Expression xsi:type="ExternalizedMapping">
                    <Property Name="Phase" />
                  </Expression>
                  <Expression xsi:type="rx:CreateObservable">
                    <Name>DriftingGrating</Name>
                    <Workflow>
                      <Nodes>
                        <Expression xsi:type="WorkflowInput">
                          <Name>Source1</Name>
                        </Expression>
                        <Expression xsi:type="rx:AsyncSubject">
                          <Name>Parameters</Name>
                        </Expression>
                        <Expression xsi:type="SubscribeSubject">
                          <Name>Draw</Name>
                        </Expression>
                        <Expression xsi:type="SubscribeSubject">
                          <Name>Parameters</Name>
                        </Expression>
                        <Expression xsi:type="PropertyMapping">
                          <PropertyMappings>
                            <Property Name="LocationX" Selector="X" />
                            <Property Name="LocationY" Selector="Y" />
                            <Property Name="Angle" Selector="Orientation" />
                            <Property Name="SpatialFrequency" Selector="SpatialFrequency" />
                            <Property Name="TemporalFrequency" Selector="TemporalFrequency" />
                            <Property Name="Contrast" Selector="Contrast" />
                            <Property Name="ExtentX" Selector="DiameterX" />
                            <Property Name="ExtentY" Selector="DiameterY" />
                          </PropertyMappings>
                        </Expression>
                        <Expression xsi:type="ExternalizedMapping">
                          <Property Name="Value" DisplayName="Phase" />
                        </Expression>
                        <Expression xsi:type="Combinator">
                          <Combinator xsi:type="FloatProperty">
                            <Value>133</Value>
                          </Combinator>
                        </Expression>
                        <Expression xsi:type="SubscribeSubject">
                          <Name>Parameters</Name>
                        </Expression>
                        <Expression xsi:type="Combinator">
                          <Combinator xsi:type="rx:Sample" />
                        </Expression>
                        <Expression xsi:type="SubscribeSubject">
                          <Name>Parameters</Name>
                        </Expression>
                        <Expression xsi:type="scr:ExpressionTransform">
                          <scr:Expression>Phase == "wheel" || Phase == "halt" || Phase == "fixed" ? 1 : 0</scr:Expression>
                        </Expression>
                        <Expression xsi:type="Combinator">
                          <Combinator xsi:type="rx:Zip" />
                        </Expression>
                        <Expression xsi:type="Multiply" />
                        <Expression xsi:type="SubscribeSubject">
                          <Name>Parameters</Name>
                        </Expression>
                        <Expression xsi:type="scr:ExpressionTransform">
                          <scr:Expression>Phase == "wheel" || Phase == "halt" || Phase == "fixed" ? 0 : Convert.ToDouble(Phase)</scr:Expression>
                        </Expression>
                        <Expression xsi:type="Combinator">
                          <Combinator xsi:type="rx:Zip" />
                        </Expression>
                        <Expression xsi:type="Add" />
                        <Expression xsi:type="PropertyMapping">
                          <PropertyMappings>
                            <Property Name="Phase" />
                          </PropertyMappings>
                        </Expression>
                        <Expression xsi:type="IncludeWorkflow" Path="BonVision:Primitives.DrawGratings.bonsai">
                          <LocationX>-30</LocationX>
                          <LocationY>10</LocationY>
                          <Layer>0</Layer>
                          <ExtentX>20</ExtentX>
                          <ExtentY>20</ExtentY>
                          <SpatialFrequency>0.08</SpatialFrequency>
                          <TemporalFrequency>4</TemporalFrequency>
                          <Phase>0</Phase>
                          <Angle>0</Angle>
                          <SquareWave>false</SquareWave>
                          <Contrast>0.8</Contrast>
                          <DutyCycle xsi:nil="true" />
                          <Radius>1</Radius>
                          <Aperture>0</Aperture>
                          <Opacity>1</Opacity>
                        </Expression>
                        <Expression xsi:type="SubscribeSubject">
                          <Name>Parameters</Name>
                        </Expression>
                        <Expression xsi:type="scr:ExpressionTransform">
                          <scr:Expression>TimeSpan.FromSeconds(Duration)</scr:Expression>
                        </Expression>
                        <Expression xsi:type="PropertyMapping">
                          <PropertyMappings>
                            <Property Name="DueTime" />
                          </PropertyMappings>
                        </Expression>
                        <Expression xsi:type="Combinator">
                          <Combinator xsi:type="gl:Timer">
                            <gl:DueTime>PT0.25S</gl:DueTime>
                          </Combinator>
                        </Expression>
                        <Expression xsi:type="Combinator">
                          <Combinator xsi:type="gl:SampleOnRenderFrame" />
                        </Expression>
                        <Expression xsi:type="SubscribeSubject">
                          <Name>Parameters</Name>
                        </Expression>
                        <Expression xsi:type="Combinator">
                          <Combinator xsi:type="rx:Zip" />
                        </Expression>
                        <Expression xsi:type="IncludeWorkflow" Path="BonVision:Logging.LogEvent.bonsai">
                          <Format>StimEnd-{0}</Format>
                          <Selector>Item2.Id</Selector>
                          <Name>Allen.Log</Name>
                        </Expression>
                        <Expression xsi:type="Combinator">
                          <Combinator xsi:type="rx:TakeUntil" />
                        </Expression>
                        <Expression xsi:type="SubscribeSubject">
                          <Name>Parameters</Name>
                        </Expression>
                        <Expression xsi:type="scr:ExpressionTransform">
                          <scr:Expression>TimeSpan.FromSeconds(Delay)</scr:Expression>
                        </Expression>
                        <Expression xsi:type="PropertyMapping">
                          <PropertyMappings>
                            <Property Name="DueTime" />
                          </PropertyMappings>
                        </Expression>
                        <Expression xsi:type="Combinator">
                          <Combinator xsi:type="gl:Timer">
                            <gl:DueTime>PT0S</gl:DueTime>
                          </Combinator>
                        </Expression>
                        <Expression xsi:type="SubscribeSubject">
                          <Name>Parameters</Name>
                        </Expression>
                        <Expression xsi:type="Combinator">
                          <Combinator xsi:type="rx:Zip" />
                        </Expression>
                        <Expression xsi:type="IncludeWorkflow" Path="BonVision:Logging.LogEvent.bonsai">
                          <Format>StimStart-{0}</Format>
                          <Selector>Item2.Id</Selector>
                          <Name>Allen.Log</Name>
                        </Expression>
                        <Expression xsi:type="Combinator">
                          <Combinator xsi:type="rx:SubscribeWhen" />
                        </Expression>
                        <Expression xsi:type="Combinator">
                          <Combinator xsi:type="rx:TakeLast">
                            <rx:Count>1</rx:Count>
                          </Combinator>
                        </Expression>
                        <Expression xsi:type="SubscribeSubject">
                          <Name>ActualParameters</Name>
                        </Expression>
                        <Expression xsi:type="Combinator">
                          <Combinator xsi:type="rx:WithLatestFrom" />
                        </Expression>
                        <Expression xsi:type="scr:ExpressionTransform">
                          <scr:Expression>it.Item2</scr:Expression>
                        </Expression>
                        <Expression xsi:type="WorkflowOutput" />
                        <Expression xsi:type="SubscribeSubject">
                          <Name>Parameters</Name>
                        </Expression>
                        <Expression xsi:type="Combinator">
                          <Combinator xsi:type="rx:Zip" />
                        </Expression>
                        <Expression xsi:type="scr:ExpressionTransform">
                          <scr:Expression>new(
    it.Item1.Contrast as Contrast,
    it.Item1.Delay as Delay,
    it.Item1.DiameterX as DiameterX,
    it.Item1.DiameterY as DiameterY,
    it.Item1.Duration as Duration,
    it.Item1.Orientation as Orientation,
    it.Item1.SpatialFrequency as SpatialFrequency,
    it.Item1.TemporalFrequency as TemporalFrequency,
    it.Item1.X as X,
    it.Item1.Y as Y,
    it.Item2 as Phase,
    it.Item1.TrialType as TrialType,           
    it.Item1.BlockType as BlockType, 
    it.Item1.Id as Id,
    it.Item1.BlockNumber as BlockNumber, 
    it.Item1.BlockLabel as BlockLabel,
    it.Item1.TrialNumber as TrialNumber, 
    it.Item1.SequenceNumber as SequenceNumber,
    it.Item1.TrialInSequence as TrialInSequence
)</scr:Expression>
                        </Expression>
                        <Expression xsi:type="rx:PublishSubject">
                          <Name>ActualParameters</Name>
                        </Expression>
                      </Nodes>
                      <Edges>
                        <Edge From="0" To="1" Label="Source1" />
                        <Edge From="2" To="18" Label="Source1" />
                        <Edge From="3" To="4" Label="Source1" />
                        <Edge From="4" To="18" Label="Source2" />
                        <Edge From="5" To="6" Label="Source1" />
                        <Edge From="6" To="8" Label="Source1" />
                        <Edge From="7" To="8" Label="Source2" />
                        <Edge From="8" To="11" Label="Source1" />
                        <Edge From="9" To="10" Label="Source1" />
                        <Edge From="10" To="11" Label="Source2" />
                        <Edge From="11" To="12" Label="Source1" />
                        <Edge From="12" To="15" Label="Source1" />
                        <Edge From="13" To="14" Label="Source1" />
                        <Edge From="14" To="15" Label="Source2" />
                        <Edge From="15" To="16" Label="Source1" />
                        <Edge From="16" To="17" Label="Source1" />
                        <Edge From="16" To="42" Label="Source2" />
                        <Edge From="17" To="18" Label="Source3" />
                        <Edge From="18" To="27" Label="Source1" />
                        <Edge From="19" To="20" Label="Source1" />
                        <Edge From="20" To="21" Label="Source1" />
                        <Edge From="21" To="22" Label="Source1" />
                        <Edge From="22" To="23" Label="Source1" />
                        <Edge From="23" To="25" Label="Source1" />
                        <Edge From="24" To="25" Label="Source2" />
                        <Edge From="25" To="26" Label="Source1" />
                        <Edge From="26" To="27" Label="Source2" />
                        <Edge From="27" To="35" Label="Source1" />
                        <Edge From="28" To="29" Label="Source1" />
                        <Edge From="29" To="30" Label="Source1" />
                        <Edge From="30" To="31" Label="Source1" />
                        <Edge From="31" To="33" Label="Source1" />
                        <Edge From="32" To="33" Label="Source2" />
                        <Edge From="33" To="34" Label="Source1" />
                        <Edge From="34" To="35" Label="Source2" />
                        <Edge From="35" To="36" Label="Source1" />
                        <Edge From="36" To="38" Label="Source1" />
                        <Edge From="37" To="38" Label="Source2" />
                        <Edge From="38" To="39" Label="Source1" />
                        <Edge From="39" To="40" Label="Source1" />
                        <Edge From="41" To="42" Label="Source1" />
                        <Edge From="42" To="43" Label="Source1" />
                        <Edge From="43" To="44" Label="Source1" />
                      </Edges>
                    </Workflow>
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="rx:Merge" />
                  </Expression>
                  <Expression xsi:type="WorkflowOutput" />
                </Nodes>
                <Edges>
                  <Edge From="0" To="1" Label="Source1" />
                  <Edge From="0" To="3" Label="Source1" />
                  <Edge From="1" To="2" Label="Source1" />
                  <Edge From="2" To="6" Label="Source1" />
                  <Edge From="3" To="5" Label="Source1" />
                  <Edge From="4" To="5" Label="Source2" />
                  <Edge From="5" To="6" Label="Source2" />
                  <Edge From="6" To="7" Label="Source1" />
                </Edges>
              </Workflow>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="rx:Merge" />
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="rx:ToArray" />
            </Expression>
            <Expression xsi:type="rx:AsyncSubject">
              <Name>ListStim</Name>
            </Expression>
            <Expression xsi:type="SubscribeSubject">
              <Name>ListStim</Name>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="rx:Merge" />
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="rx:Concat" />
            </Expression>
            <Expression xsi:type="WorkflowOutput" />
          </Nodes>
          <Edges>
            <Edge From="0" To="2" Label="Source1" />
            <Edge From="1" To="2" Label="Source2" />
            <Edge From="2" To="3" Label="Source1" />
            <Edge From="3" To="4" Label="Source1" />
            <Edge From="4" To="5" Label="Source1" />
            <Edge From="6" To="7" Label="Source1" />
            <Edge From="7" To="8" Label="Source1" />
            <Edge From="8" To="9" Label="Source1" />
          </Edges>
        </Workflow>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="rx:Take">
          <rx:Count>1</rx:Count>
        </Combinator>
      </Expression>
      <Expression xsi:type="ExternalizedMapping">
        <Property Name="DueTime" DisplayName="stimulus_table_duration" />
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="rx:Delay">
          <rx:DueTime>PT6M30S</rx:DueTime>
        </Combinator>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="rx:TakeUntil" />
      </Expression>
      <Expression xsi:type="rx:BehaviorSubject">
        <Name>Orientation</Name>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="rx:TakeLast">
          <rx:Count>1</rx:Count>
        </Combinator>
      </Expression>
      <Expression xsi:type="rx:PublishSubject">
        <Name>EndExpt</Name>
      </Expression>
      <Expression xsi:type="SubscribeSubject">
        <Name>ListStim</Name>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="rx:Take">
          <rx:Count>1</rx:Count>
        </Combinator>
      </Expression>
      <Expression xsi:type="rx:PublishSubject">
        <Name>StartExpt</Name>
      </Expression>
      <Expression xsi:type="IncludeWorkflow" Path="BonVision:Logging.LogEvent.bonsai">
        <Format>START</Format>
        <Selector xsi:nil="true" />
        <Name>Allen.Log</Name>
      </Expression>
      <Expression xsi:type="ExternalizedMapping">
        <Property Name="PortName" DisplayName="WheelComPort" />
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="p1:AMT10EncoderSource">
          <p1:PortName />
          <p1:BaudRate>9600</p1:BaudRate>
          <p1:Timeout>500</p1:Timeout>
          <p1:CountsPerRevolution>8192</p1:CountsPerRevolution>
          <p1:Debug>false</p1:Debug>
        </Combinator>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="gl:RenderFrame" />
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="rx:Sample" />
      </Expression>
      <Expression xsi:type="IncludeWorkflow" Path="BonVision:Logging.LogEvent.bonsai">
        <Format>Wheel-Index-{0}-Count-{1}-Deg-{2}</Format>
        <Selector>Index,Count,Degrees</Selector>
        <Name>Allen.Log</Name>
      </Expression>
      <Expression xsi:type="MemberSelector">
        <Selector>Degrees</Selector>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="FloatProperty">
          <Value>0</Value>
        </Combinator>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="rx:OnErrorResumeNext" />
      </Expression>
      <Expression xsi:type="rx:PublishSubject">
        <Name>WheelDegrees</Name>
      </Expression>
      <Expression xsi:type="ExternalizedMapping">
        <Property Name="Value" DisplayName="WheelRadiusOverScreenRatio" />
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="FloatProperty">
          <Value>0.36</Value>
        </Combinator>
      </Expression>
      <Expression xsi:type="ExternalizedMapping">
        <Property Name="Value" DisplayName="MotorCouplingCPD" />
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="FloatProperty">
          <Value>0.04</Value>
        </Combinator>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="rx:CombineLatest" />
      </Expression>
      <Expression xsi:type="scr:ExpressionTransform">
        <scr:Expression>2 * Math.PI * it.Item2 * it.Item1 / (Math.tan((1/it.Item3) * Math.PI / 180))</scr:Expression>
      </Expression>
      <Expression xsi:type="Mod">
        <Operand xsi:type="DoubleProperty">
          <Value>360</Value>
        </Operand>
      </Expression>
      <Expression xsi:type="scr:ExpressionTransform">
        <scr:Expression>it * Math.PI / 180</scr:Expression>
      </Expression>
      <Expression xsi:type="rx:PublishSubject">
        <Name>TemporalPhase</Name>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="gl:RenderFrame" />
      </Expression>
      <Expression xsi:type="SubscribeSubject">
        <Name>LoggingRootPath</Name>
      </Expression>
      <Expression xsi:type="Format">
        <Format>{0}/orientations_logger.csv</Format>
        <Selector>it</Selector>
      </Expression>
      <Expression xsi:type="PropertyMapping">
        <PropertyMappings>
          <Property Name="FileName" />
        </PropertyMappings>
      </Expression>
      <Expression xsi:type="IncludeWorkflow" Path="BonVision:Logging.FrameEventLogger.bonsai">
        <Name>Allen.Log</Name>
        <Append>false</Append>
        <Overwrite>true</Overwrite>
        <Suffix>None</Suffix>
        <FileName>C:/BonsaiDataPredictiveProcessing/769904/769904_20251017T222126/orientations_logger.csv</FileName>
      </Expression>
      <Expression xsi:type="IncludeWorkflow" Path="BonVision:Logging.LogEvent.bonsai">
        <Format>Frame</Format>
        <Selector xsi:nil="true" />
        <Name>Allen.Log</Name>
      </Expression>
      <Expression xsi:type="SubscribeSubject">
        <Name>EndSession</Name>
      </Expression>
      <Expression xsi:type="IncludeWorkflow" Path="BonVision:Logging.LogEvent.bonsai">
        <Format>EndFrame</Format>
        <Selector xsi:nil="true" />
        <Name>Allen.Log</Name>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="rx:TakeUntil" />
      </Expression>
      <Expression xsi:type="SubscribeSubject">
        <Name>Orientation</Name>
      </Expression>
      <Expression xsi:type="SubscribeSubject">
        <Name>LoggingRootPath</Name>
      </Expression>
      <Expression xsi:type="Format">
        <Format>{0}/orientations_orientations.csv</Format>
        <Selector>it</Selector>
      </Expression>
      <Expression xsi:type="PropertyMapping">
        <PropertyMappings>
          <Property Name="FileName" />
        </PropertyMappings>
      </Expression>
      <Expression xsi:type="Annotation">
        <Name>Save Orientation Ordering</Name>
        <Text><![CDATA[]]></Text>
      </Expression>
      <Expression xsi:type="io:CsvWriter">
        <io:FileName>C:/BonsaiDataPredictiveProcessing/769904/769904_20251017T222126/orientations_orientations.csv</io:FileName>
        <io:Append>true</io:Append>
        <io:Overwrite>false</io:Overwrite>
        <io:Suffix>FileCount</io:Suffix>
        <io:IncludeHeader>true</io:IncludeHeader>
      </Expression>
      <Expression xsi:type="ExternalizedMapping">
        <Property Name="Value" DisplayName="FrameLine" />
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="StringProperty">
          <Value>None</Value>
        </Combinator>
      </Expression>
      <Expression xsi:type="rx:Condition">
        <Workflow>
          <Nodes>
            <Expression xsi:type="WorkflowInput">
              <Name>Source1</Name>
            </Expression>
            <Expression xsi:type="NotEqual">
              <Operand xsi:type="StringProperty">
                <Value>None</Value>
              </Operand>
            </Expression>
            <Expression xsi:type="WorkflowOutput" />
          </Nodes>
          <Edges>
            <Edge From="0" To="1" Label="Source1" />
            <Edge From="1" To="2" Label="Source1" />
          </Edges>
        </Workflow>
      </Expression>
      <Expression xsi:type="rx:SelectMany">
        <Name>TriggerSyncFrame</Name>
        <Workflow>
          <Nodes>
            <Expression xsi:type="WorkflowInput">
              <Name>Source1</Name>
            </Expression>
            <Expression xsi:type="PropertyMapping">
              <PropertyMappings>
                <Property Name="Lines" />
              </PropertyMappings>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="p2:DigitalOutputConfigurationSource">
                <p2:ChannelName />
                <p2:Lines>Dev1/port0</p2:Lines>
                <p2:Grouping>OneChannelForEachLine</p2:Grouping>
              </Combinator>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="p2:ToDigitalOutputConfigCollection" />
            </Expression>
            <Expression xsi:type="PropertyMapping">
              <PropertyMappings>
                <Property Name="Channels" />
              </PropertyMappings>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="gl:RenderFrame" />
            </Expression>
            <Expression xsi:type="SubscribeSubject">
              <Name>StartExpt</Name>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="rx:SubscribeWhen" />
            </Expression>
            <Expression xsi:type="SubscribeSubject">
              <Name>EndSession</Name>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="rx:TakeUntil" />
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="BooleanProperty">
                <Value>false</Value>
              </Combinator>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="gl:Delay">
                <gl:DueTime>PT0.005S</gl:DueTime>
              </Combinator>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="BooleanProperty">
                <Value>true</Value>
              </Combinator>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="rx:Merge" />
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="p2:DigitalOutputWriter">
                <p2:Channels />
                <p2:SignalSource />
                <p2:SampleRate>1000</p2:SampleRate>
                <p2:ActiveEdge>Rising</p2:ActiveEdge>
                <p2:SampleMode>ContinuousSamples</p2:SampleMode>
                <p2:BufferSize>1000</p2:BufferSize>
              </Combinator>
            </Expression>
            <Expression xsi:type="WorkflowOutput" />
          </Nodes>
          <Edges>
            <Edge From="0" To="1" Label="Source1" />
            <Edge From="1" To="2" Label="Source1" />
            <Edge From="2" To="3" Label="Source1" />
            <Edge From="3" To="4" Label="Source1" />
            <Edge From="4" To="14" Label="Source1" />
            <Edge From="5" To="7" Label="Source1" />
            <Edge From="6" To="7" Label="Source2" />
            <Edge From="7" To="9" Label="Source1" />
            <Edge From="8" To="9" Label="Source2" />
            <Edge From="9" To="10" Label="Source1" />
            <Edge From="9" To="12" Label="Source1" />
            <Edge From="10" To="11" Label="Source1" />
            <Edge From="11" To="13" Label="Source1" />
            <Edge From="12" To="13" Label="Source2" />
            <Edge From="13" To="14" Label="Source2" />
            <Edge From="14" To="15" Label="Source1" />
          </Edges>
        </Workflow>
      </Expression>
      <Expression xsi:type="ExternalizedMapping">
        <Property Name="Value" DisplayName="AcqLine" />
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="StringProperty">
          <Value>None</Value>
        </Combinator>
      </Expression>
      <Expression xsi:type="rx:Condition">
        <Workflow>
          <Nodes>
            <Expression xsi:type="WorkflowInput">
              <Name>Source1</Name>
            </Expression>
            <Expression xsi:type="NotEqual">
              <Operand xsi:type="StringProperty">
                <Value>None</Value>
              </Operand>
            </Expression>
            <Expression xsi:type="WorkflowOutput" />
          </Nodes>
          <Edges>
            <Edge From="0" To="1" Label="Source1" />
            <Edge From="1" To="2" Label="Source1" />
          </Edges>
        </Workflow>
      </Expression>
      <Expression xsi:type="rx:SelectMany">
        <Name>TriggerSyncAcq</Name>
        <Workflow>
          <Nodes>
            <Expression xsi:type="WorkflowInput">
              <Name>Source1</Name>
            </Expression>
            <Expression xsi:type="PropertyMapping">
              <PropertyMappings>
                <Property Name="Lines" />
              </PropertyMappings>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="p2:DigitalOutputConfigurationSource">
                <p2:ChannelName />
                <p2:Lines>Dev1/port0</p2:Lines>
                <p2:Grouping>OneChannelForEachLine</p2:Grouping>
              </Combinator>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="p2:ToDigitalOutputConfigCollection" />
            </Expression>
            <Expression xsi:type="PropertyMapping">
              <PropertyMappings>
                <Property Name="Channels" />
              </PropertyMappings>
            </Expression>
            <Expression xsi:type="SubscribeSubject">
              <Name>EndSession</Name>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="BooleanProperty">
                <Value>false</Value>
              </Combinator>
            </Expression>
            <Expression xsi:type="SubscribeSubject">
              <Name>StartExpt</Name>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="BooleanProperty">
                <Value>true</Value>
              </Combinator>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="rx:Merge" />
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="p2:DigitalOutputWriter">
                <p2:Channels />
                <p2:SignalSource />
                <p2:SampleRate>1000</p2:SampleRate>
                <p2:ActiveEdge>Rising</p2:ActiveEdge>
                <p2:SampleMode>ContinuousSamples</p2:SampleMode>
                <p2:BufferSize>1000</p2:BufferSize>
              </Combinator>
            </Expression>
            <Expression xsi:type="WorkflowOutput" />
          </Nodes>
          <Edges>
            <Edge From="0" To="1" Label="Source1" />
            <Edge From="1" To="2" Label="Source1" />
            <Edge From="2" To="3" Label="Source1" />
            <Edge From="3" To="4" Label="Source1" />
            <Edge From="4" To="10" Label="Source1" />
            <Edge From="5" To="6" Label="Source1" />
            <Edge From="6" To="9" Label="Source1" />
            <Edge From="7" To="8" Label="Source1" />
            <Edge From="8" To="9" Label="Source2" />
            <Edge From="9" To="10" Label="Source2" />
            <Edge From="10" To="11" Label="Source1" />
          </Edges>
        </Workflow>
      </Expression>
    </Nodes>
    <Edges>
      <Edge From="0" To="1" Label="Source1" />
      <Edge From="1" To="2" Label="Source1" />
      <Edge From="2" To="3" Label="Source1" />
      <Edge From="3" To="4" Label="Source1" />
      <Edge From="5" To="6" Label="Source1" />
      <Edge From="6" To="7" Label="Source1" />
      <Edge From="6" To="10" Label="Source1" />
      <Edge From="7" To="9" Label="Source1" />
      <Edge From="8" To="9" Label="Source2" />
      <Edge From="9" To="12" Label="Source1" />
      <Edge From="10" To="11" Label="Source1" />
      <Edge From="11" To="12" Label="Source2" />
      <Edge From="12" To="13" Label="Source1" />
      <Edge From="13" To="15" Label="Source1" />
      <Edge From="14" To="15" Label="Source2" />
      <Edge From="16" To="17" Label="Source1" />
      <Edge From="17" To="18" Label="Source1" />
      <Edge From="18" To="22" Label="Source1" />
      <Edge From="19" To="20" Label="Source1" />
      <Edge From="20" To="21" Label="Source1" />
      <Edge From="21" To="22" Label="Source2" />
      <Edge From="22" To="26" Label="Source1" />
      <Edge From="23" To="25" Label="Source1" />
      <Edge From="24" To="25" Label="Source2" />
      <Edge From="25" To="26" Label="Source2" />
      <Edge From="26" To="27" Label="Source1" />
      <Edge From="27" To="28" Label="Source1" />
      <Edge From="28" To="29" Label="Source1" />
      <Edge From="29" To="30" Label="Source1" />
      <Edge From="30" To="31" Label="Source1" />
      <Edge From="32" To="33" Label="Source1" />
      <Edge From="34" To="35" Label="Source1" />
      <Edge From="35" To="36" Label="Source1" />
      <Edge From="36" To="37" Label="Source1" />
      <Edge From="37" To="38" Label="Source1" />
      <Edge From="38" To="39" Label="Source1" />
      <Edge From="40" To="41" Label="Source1" />
      <Edge From="41" To="44" Label="Source1" />
      <Edge From="42" To="43" Label="Source1" />
      <Edge From="43" To="44" Label="Source2" />
      <Edge From="44" To="45" Label="Source1" />
      <Edge From="45" To="46" Label="Source1" />
      <Edge From="46" To="47" Label="Source1" />
      <Edge From="47" To="49" Label="Source1" />
      <Edge From="48" To="49" Label="Source2" />
      <Edge From="49" To="52" Label="Source1" />
      <Edge From="50" To="51" Label="Source1" />
      <Edge From="51" To="52" Label="Source3" />
      <Edge From="52" To="53" Label="Source1" />
      <Edge From="52" To="56" Label="Source1" />
      <Edge From="53" To="55" Label="Source1" />
      <Edge From="54" To="55" Label="Source2" />
      <Edge From="55" To="56" Label="Source2" />
      <Edge From="56" To="57" Label="Source1" />
      <Edge From="57" To="58" Label="Source1" />
      <Edge From="58" To="59" Label="Source1" />
      <Edge From="60" To="61" Label="Source1" />
      <Edge From="61" To="62" Label="Source1" />
      <Edge From="62" To="63" Label="Source1" />
      <Edge From="64" To="65" Label="Source1" />
      <Edge From="65" To="67" Label="Source1" />
      <Edge From="66" To="67" Label="Source2" />
      <Edge From="67" To="68" Label="Source1" />
      <Edge From="68" To="69" Label="Source1" />
      <Edge From="69" To="71" Label="Source1" />
      <Edge From="70" To="71" Label="Source2" />
      <Edge From="71" To="72" Label="Source1" />
      <Edge From="72" To="77" Label="Source1" />
      <Edge From="73" To="74" Label="Source1" />
      <Edge From="74" To="77" Label="Source2" />
      <Edge From="75" To="76" Label="Source1" />
      <Edge From="76" To="77" Label="Source3" />
      <Edge From="77" To="78" Label="Source1" />
      <Edge From="78" To="79" Label="Source1" />
      <Edge From="79" To="80" Label="Source1" />
      <Edge From="80" To="81" Label="Source1" />
      <Edge From="82" To="86" Label="Source1" />
      <Edge From="83" To="84" Label="Source1" />
      <Edge From="84" To="85" Label="Source1" />
      <Edge From="85" To="86" Label="Source2" />
      <Edge From="86" To="87" Label="Source1" />
      <Edge From="87" To="90" Label="Source1" />
      <Edge From="88" To="89" Label="Source1" />
      <Edge From="89" To="90" Label="Source2" />
      <Edge From="91" To="96" Label="Source1" />
      <Edge From="92" To="93" Label="Source1" />
      <Edge From="93" To="94" Label="Source1" />
      <Edge From="94" To="96" Label="Source2" />
      <Edge From="95" To="96" Label="Source3" />
      <Edge From="97" To="98" Label="Source1" />
      <Edge From="98" To="99" Label="Source1" />
      <Edge From="99" To="100" Label="Source1" />
      <Edge From="101" To="102" Label="Source1" />
      <Edge From="102" To="103" Label="Source1" />
      <Edge From="103" To="104" Label="Source1" />
    </Edges>
  </Workflow>
</WorkflowBuilder>