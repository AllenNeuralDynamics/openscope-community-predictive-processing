<?xml version="1.0" encoding="utf-8"?>
<WorkflowBuilder Version="2.8.5"
                 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                 xmlns:gl="clr-namespace:Bonsai.Shaders;assembly=Bonsai.Shaders"
                 xmlns:res="clr-namespace:Bonsai.Resources;assembly=Bonsai.System"
                 xmlns:rx="clr-namespace:Bonsai.Reactive;assembly=Bonsai.Core"
                 xmlns:scr="clr-namespace:Bonsai.Scripting.Expressions;assembly=Bonsai.Scripting.Expressions"
                 xmlns:wie="clr-namespace:Bonsai.Windows.Input;assembly=Bonsai.Windows.Input"
                 xmlns:harp="clr-namespace:Bonsai.Harp;assembly=Bonsai.Harp"
                 xmlns:beh="clr-namespace:Harp.Behavior;assembly=Harp.Behavior"
                 xmlns:io="clr-namespace:Bonsai.IO;assembly=Bonsai.System"
                 xmlns="https://bonsai-rx.org/2018/workflow">
  <Workflow>
    <Nodes>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="gl:CreateWindow">
          <gl:Width>560</gl:Width>
          <gl:Height>480</gl:Height>
          <gl:VSync>On</gl:VSync>
          <gl:SwapSync>true</gl:SwapSync>
          <gl:ClearColor>Transparent</gl:ClearColor>
          <gl:ClearMask>DepthBufferBit ColorBufferBit</gl:ClearMask>
          <gl:CursorVisible>false</gl:CursorVisible>
          <gl:Location xsi:nil="true" />
          <gl:WindowBorder>Fixed</gl:WindowBorder>
          <gl:WindowState>Fullscreen</gl:WindowState>
          <gl:DisplayDevice>Primary</gl:DisplayDevice>
          <gl:TargetRenderFrequency>60</gl:TargetRenderFrequency>
          <gl:TargetUpdateFrequency>120</gl:TargetUpdateFrequency>
          <gl:RenderState />
          <gl:GraphicsMode>
            <gl:ColorFormat>
              <gl:Red>8</gl:Red>
              <gl:Green>8</gl:Green>
              <gl:Blue>8</gl:Blue>
              <gl:Alpha>8</gl:Alpha>
            </gl:ColorFormat>
            <gl:Depth>16</gl:Depth>
            <gl:Stencil>0</gl:Stencil>
            <gl:Samples>0</gl:Samples>
            <gl:AccumulatorFormat>
              <gl:Red>0</gl:Red>
              <gl:Green>0</gl:Green>
              <gl:Blue>0</gl:Blue>
              <gl:Alpha>0</gl:Alpha>
            </gl:AccumulatorFormat>
            <gl:Buffers>2</gl:Buffers>
            <gl:Stereo>false</gl:Stereo>
          </gl:GraphicsMode>
        </Combinator>
      </Expression>
      <Expression xsi:type="IncludeWorkflow" Path="BonVision:Primitives.BonVisionResources.bonsai" />
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="gl:TextureResources">
          <gl:Textures>
            <gl:TextureConfiguration xsi:type="gl:VideoTexture">
              <gl:Name>Zebra</gl:Name>
              <gl:Width xsi:nil="true" />
              <gl:Height xsi:nil="true" />
              <gl:InternalFormat>Rgba</gl:InternalFormat>
              <gl:WrapS>Repeat</gl:WrapS>
              <gl:WrapT>Repeat</gl:WrapT>
              <gl:MinFilter>Linear</gl:MinFilter>
              <gl:MagFilter>Linear</gl:MagFilter>
              <gl:FileName>movies\zebra_allen_screen_tscale_30_scale_10.mp4</gl:FileName>
              <gl:FlipMode>Vertical</gl:FlipMode>
              <gl:FrameCount xsi:nil="true" />
              <gl:StartPosition>0</gl:StartPosition>
              <gl:BufferLength xsi:nil="true" />
            </gl:TextureConfiguration>
            <gl:TextureConfiguration xsi:type="gl:VideoTexture">
              <gl:Name>Trippy</gl:Name>
              <gl:Width xsi:nil="true" />
              <gl:Height xsi:nil="true" />
              <gl:InternalFormat>Rgba</gl:InternalFormat>
              <gl:WrapS>Repeat</gl:WrapS>
              <gl:WrapT>Repeat</gl:WrapT>
              <gl:MinFilter>Linear</gl:MinFilter>
              <gl:MagFilter>Linear</gl:MagFilter>
              <gl:FileName>movies\Compressed_MATLAB_trippy_150s_1920x1200_30fps_120x95.mp4</gl:FileName>
              <gl:FlipMode>Vertical</gl:FlipMode>
              <gl:FrameCount xsi:nil="true" />
              <gl:StartPosition>0</gl:StartPosition>
              <gl:BufferLength xsi:nil="true" />
            </gl:TextureConfiguration>
          </gl:Textures>
        </Combinator>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="gl:ShaderResources">
          <gl:Shaders>
            <gl:ShaderConfiguration xsi:type="gl:Material">
              <gl:Name>ColoredGratings</gl:Name>
              <gl:RenderState />
              <gl:ShaderUniforms />
              <gl:BufferBindings />
              <gl:FramebufferAttachments />
              <gl:VertexShader>BonVision:Shaders.Gratings.vert</gl:VertexShader>
              <gl:FragmentShader>..\..\bonsai\Shaders\ColorBalance.frag</gl:FragmentShader>
            </gl:ShaderConfiguration>
          </gl:Shaders>
        </Combinator>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="res:LoadResources" />
      </Expression>
      <Expression xsi:type="ExternalizedMapping">
        <Property Name="Value" DisplayName="sync_sqr" />
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="BooleanProperty">
          <Value>true</Value>
        </Combinator>
      </Expression>
      <Expression xsi:type="rx:Condition">
        <Workflow>
          <Nodes>
            <Expression xsi:type="WorkflowInput">
              <Name>Source1</Name>
            </Expression>
            <Expression xsi:type="WorkflowOutput" />
          </Nodes>
          <Edges>
            <Edge From="0" To="1" Label="Source1" />
          </Edges>
        </Workflow>
      </Expression>
      <Expression xsi:type="ExternalizedMapping">
        <Property Name="Photodiode_ExtentX" />
        <Property Name="Photodiode_ExtentY" />
        <Property Name="Photodiode_LocationX" />
        <Property Name="Photodiode_LocationY" />
        <Property Name="sync_sqr_freq" />
      </Expression>
      <Expression xsi:type="rx:SelectMany">
        <Workflow>
          <Nodes>
            <Expression xsi:type="SubscribeSubject">
              <Name>Draw</Name>
            </Expression>
            <Expression xsi:type="SubscribeSubject">
              <Name>StartSession</Name>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="rx:SubscribeWhen" />
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="gl:RenderFrame" />
            </Expression>
            <Expression xsi:type="SubscribeSubject">
              <Name>StartSession</Name>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="rx:SubscribeWhen" />
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="rx:ElementIndex" />
            </Expression>
            <Expression xsi:type="MemberSelector">
              <Selector>Index</Selector>
            </Expression>
            <Expression xsi:type="ExternalizedMapping">
              <Property Name="Value" DisplayName="sync_sqr_freq" />
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="FloatProperty">
                <Value>0.5</Value>
              </Combinator>
            </Expression>
            <Expression xsi:type="scr:ExpressionTransform">
              <scr:Expression>Convert.ToInt32(60 / (it / 2))</scr:Expression>
            </Expression>
            <Expression xsi:type="PropertyMapping">
              <PropertyMappings>
                <Property Name="Value" />
              </PropertyMappings>
            </Expression>
            <Expression xsi:type="Mod">
              <Operand xsi:type="IntProperty">
                <Value>240</Value>
              </Operand>
            </Expression>
            <Expression xsi:type="scr:ExpressionTransform">
              <scr:Expression>Convert.ToInt32(60 / it)</scr:Expression>
            </Expression>
            <Expression xsi:type="PropertyMapping">
              <PropertyMappings>
                <Property Name="Value" />
              </PropertyMappings>
            </Expression>
            <Expression xsi:type="Divide">
              <Operand xsi:type="IntProperty">
                <Value>120</Value>
              </Operand>
            </Expression>
            <Expression xsi:type="PropertyMapping">
              <PropertyMappings>
                <Property Name="ColorR" />
                <Property Name="ColorG" />
                <Property Name="ColorB" />
              </PropertyMappings>
            </Expression>
            <Expression xsi:type="ExternalizedMapping">
              <Property Name="ExtentX" DisplayName="Photodiode_ExtentX" />
              <Property Name="ExtentY" DisplayName="Photodiode_ExtentY" />
              <Property Name="LocationX" DisplayName="Photodiode_LocationX" />
              <Property Name="LocationY" DisplayName="Photodiode_LocationY" />
            </Expression>
            <Expression xsi:type="IncludeWorkflow" Path="BonVision:Primitives.DrawQuad.bonsai">
              <ExtentX>8</ExtentX>
              <ExtentY>8</ExtentY>
              <LocationX>59</LocationX>
              <LocationY>28</LocationY>
              <Layer>2</Layer>
              <Angle>0</Angle>
              <ColorR>0</ColorR>
              <ColorG>0</ColorG>
              <ColorB>0</ColorB>
              <ColorA>1</ColorA>
            </Expression>
            <Expression xsi:type="MemberSelector">
              <Selector>X</Selector>
            </Expression>
            <Expression xsi:type="IncludeWorkflow" Path="BonVision:Logging.LogEvent.bonsai">
              <Format>Photodiode-{0}</Format>
              <Selector xsi:nil="true" />
              <Name>Allen.Log</Name>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="rx:DistinctUntilChanged" />
            </Expression>
            <Expression xsi:type="rx:Condition">
              <Workflow>
                <Nodes>
                  <Expression xsi:type="WorkflowInput">
                    <Name>Source1</Name>
                  </Expression>
                  <Expression xsi:type="Equal">
                    <Operand xsi:type="FloatProperty">
                      <Value>0</Value>
                    </Operand>
                  </Expression>
                  <Expression xsi:type="WorkflowOutput" />
                </Nodes>
                <Edges>
                  <Edge From="0" To="1" Label="Source1" />
                  <Edge From="1" To="2" Label="Source1" />
                </Edges>
              </Workflow>
            </Expression>
            <Expression xsi:type="WorkflowOutput" />
          </Nodes>
          <Edges>
            <Edge From="0" To="2" Label="Source1" />
            <Edge From="1" To="2" Label="Source2" />
            <Edge From="2" To="18" Label="Source1" />
            <Edge From="3" To="5" Label="Source1" />
            <Edge From="4" To="5" Label="Source2" />
            <Edge From="5" To="6" Label="Source1" />
            <Edge From="6" To="7" Label="Source1" />
            <Edge From="7" To="12" Label="Source1" />
            <Edge From="8" To="9" Label="Source1" />
            <Edge From="9" To="10" Label="Source1" />
            <Edge From="9" To="13" Label="Source1" />
            <Edge From="10" To="11" Label="Source1" />
            <Edge From="11" To="12" Label="Source2" />
            <Edge From="12" To="15" Label="Source1" />
            <Edge From="13" To="14" Label="Source1" />
            <Edge From="14" To="15" Label="Source2" />
            <Edge From="15" To="16" Label="Source1" />
            <Edge From="16" To="18" Label="Source2" />
            <Edge From="17" To="18" Label="Source3" />
            <Edge From="18" To="19" Label="Source1" />
            <Edge From="19" To="20" Label="Source1" />
            <Edge From="20" To="21" Label="Source1" />
            <Edge From="21" To="22" Label="Source1" />
            <Edge From="22" To="23" Label="Source1" />
          </Edges>
        </Workflow>
      </Expression>
      <Expression xsi:type="rx:Condition">
        <Workflow>
          <Nodes>
            <Expression xsi:type="WorkflowInput">
              <Name>Source1</Name>
            </Expression>
            <Expression xsi:type="Equal">
              <Operand xsi:type="BooleanProperty">
                <Value>false</Value>
              </Operand>
            </Expression>
            <Expression xsi:type="WorkflowOutput" />
          </Nodes>
          <Edges>
            <Edge From="0" To="1" Label="Source1" />
            <Edge From="1" To="2" Label="Source1" />
          </Edges>
        </Workflow>
      </Expression>
      <Expression xsi:type="rx:SelectMany">
        <Workflow>
          <Nodes>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="gl:RenderFrame" />
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="FloatProperty">
                <Value>0</Value>
              </Combinator>
            </Expression>
            <Expression xsi:type="WorkflowOutput" />
            <Expression xsi:type="WorkflowInput">
              <Name>Source1</Name>
            </Expression>
          </Nodes>
          <Edges>
            <Edge From="0" To="1" Label="Source1" />
            <Edge From="1" To="2" Label="Source1" />
          </Edges>
        </Workflow>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="rx:Merge" />
      </Expression>
      <Expression xsi:type="rx:PublishSubject">
        <Name>EndReady</Name>
      </Expression>
      <Expression xsi:type="SubscribeSubject">
        <Name>EndSession</Name>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="rx:TakeUntil" />
      </Expression>
      <Expression xsi:type="SubscribeSubject">
        <Name>EndExpt</Name>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="StringProperty">
          <Value>END</Value>
        </Combinator>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="rx:Take">
          <rx:Count>1</rx:Count>
        </Combinator>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="wie:KeyDown">
          <wie:Filter>End</wie:Filter>
          <wie:SuppressRepetitions>false</wie:SuppressRepetitions>
        </Combinator>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="StringProperty">
          <Value>END</Value>
        </Combinator>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="rx:Take">
          <rx:Count>1</rx:Count>
        </Combinator>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="rx:Merge" />
      </Expression>
      <Expression xsi:type="SubscribeSubject">
        <Name>EndReady</Name>
      </Expression>
      <Expression xsi:type="SubscribeSubject">
        <Name>EndExpt</Name>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="rx:SkipUntil" />
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="rx:Zip" />
      </Expression>
      <Expression xsi:type="IncludeWorkflow" Path="BonVision:Logging.LogEvent.bonsai">
        <Format>END</Format>
        <Selector xsi:nil="true" />
        <Name>Allen.Log</Name>
      </Expression>
      <Expression xsi:type="rx:PublishSubject">
        <Name>EndSession</Name>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="gl:Delay">
          <gl:DueTime>PT1S</gl:DueTime>
        </Combinator>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="rx:Take">
          <rx:Count>1</rx:Count>
        </Combinator>
      </Expression>
      <Expression xsi:type="WorkflowOutput" />
      <Expression xsi:type="ExternalizedMapping">
        <Property Name="RootFolder" />
        <Property Name="Subject" />
      </Expression>
      <Expression xsi:type="IncludeWorkflow" Path="AllenNeuralDynamics.Core:GenerateRootLoggingPath.bonsai">
        <RootFolder>C:/BonsaiDataPredictiveProcessing</RootFolder>
        <Subject>769904</Subject>
        <DateTimeOffset>0001-01-01T00:00:00.0000000+00:00</DateTimeOffset>
        <SubjectName>LoggingRootPath</SubjectName>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="gl:RenderFrame" />
      </Expression>
      <Expression xsi:type="IncludeWorkflow" Path="BonVision:Environment.OrthographicView.bonsai">
        <Left>-90</Left>
        <Right>90</Right>
        <Bottom>-50</Bottom>
        <Top>50</Top>
      </Expression>
      <Expression xsi:type="rx:PublishSubject">
        <Name>Draw</Name>
      </Expression>
      <Expression xsi:type="IncludeWorkflow" Path="BonVision:Environment.SphereMapping.bonsai">
        <ClearColor>Navy</ClearColor>
        <Width xsi:nil="true" />
        <Height xsi:nil="true" />
        <RotationZ>0</RotationZ>
        <RotationY>0</RotationY>
        <RotationX>0</RotationX>
        <FaceSize xsi:nil="true" />
      </Expression>
      <Expression xsi:type="IncludeWorkflow" Path="BonVision:Environment.ViewWindow.bonsai">
        <Width>20.4</Width>
        <Height>15.5</Height>
        <Rotation>
          <X>0</X>
          <Y>0</Y>
          <Z>0</Z>
        </Rotation>
        <Translation>
          <X>0</X>
          <Y>0</Y>
          <Z>-15.1</Z>
        </Translation>
      </Expression>
      <Expression xsi:type="IncludeWorkflow" Path="BonVision:Environment.GammaCorrection.bonsai">
        <ClearColor>Gray</ClearColor>
        <GammaLut>..\..\..\Gamma\Rigs\2025-05-22-SLAP2-gammalut.bmp</GammaLut>
      </Expression>
      <Expression xsi:type="IncludeWorkflow" Path="..\Extensions\behavior_camera.bonsai">
        <Format>{0}/face_video.avi</Format>
        <Index>0</Index>
        <EventName>FaceCamera</EventName>
      </Expression>
      <Expression xsi:type="SubscribeSubject">
        <Name>BehaviorEvents</Name>
      </Expression>
      <Expression xsi:type="SubscribeSubject">
        <Name>StartSession</Name>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="rx:SubscribeWhen" />
      </Expression>
      <Expression xsi:type="ExternalizedMapping">
        <Property Name="Interval" DisplayName="SLAP2_Trial_Length" />
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="rx:GateInterval">
          <rx:Interval>PT30S</rx:Interval>
        </Combinator>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="rx:Skip">
          <rx:Count>1</rx:Count>
        </Combinator>
      </Expression>
      <Expression xsi:type="IncludeWorkflow" Path="..\Extensions\SLAP-Stop.bonsai" />
      <Expression xsi:type="IncludeWorkflow" Path="BonVision:Logging.LogEvent.bonsai">
        <Format>STOPSLAP</Format>
        <Selector xsi:nil="true" />
        <Name>Allen.Log</Name>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="gl:Delay">
          <gl:DueTime>PT0.6S</gl:DueTime>
        </Combinator>
      </Expression>
      <Expression xsi:type="IncludeWorkflow" Path="..\Extensions\SLAP-Start.bonsai" />
      <Expression xsi:type="IncludeWorkflow" Path="BonVision:Logging.LogEvent.bonsai">
        <Format>STARTSLAP</Format>
        <Selector xsi:nil="true" />
        <Name>Allen.Log</Name>
      </Expression>
      <Expression xsi:type="rx:BehaviorSubject" TypeArguments="harp:HarpMessage">
        <rx:Name>BehaviorCommands</rx:Name>
      </Expression>
      <Expression xsi:type="ExternalizedMapping">
        <Property Name="PortName" />
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="harp:Device">
          <harp:OperationMode>Active</harp:OperationMode>
          <harp:OperationLed>On</harp:OperationLed>
          <harp:DumpRegisters>true</harp:DumpRegisters>
          <harp:VisualIndicators>On</harp:VisualIndicators>
          <harp:Heartbeat>Enabled</harp:Heartbeat>
          <harp:IgnoreErrors>false</harp:IgnoreErrors>
          <harp:PortName>COM7</harp:PortName>
        </Combinator>
      </Expression>
      <Expression xsi:type="rx:PublishSubject">
        <Name>BehaviorEvents</Name>
      </Expression>
      <Expression xsi:type="SubscribeSubject">
        <Name>BehaviorEvents</Name>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="rx:Take">
          <rx:Count>1</rx:Count>
        </Combinator>
      </Expression>
      <Expression xsi:type="beh:CreateMessage">
        <harp:MessageType>Write</harp:MessageType>
        <harp:Payload xsi:type="beh:CreateEnableEncodersPayload">
          <beh:EnableEncoders>EncoderPort2</beh:EnableEncoders>
        </harp:Payload>
      </Expression>
      <Expression xsi:type="MulticastSubject">
        <Name>BehaviorCommands</Name>
      </Expression>
      <Expression xsi:type="SubscribeSubject">
        <Name>BehaviorEvents</Name>
      </Expression>
      <Expression xsi:type="beh:Parse">
        <harp:Register xsi:type="beh:TimestampedAnalogData" />
      </Expression>
      <Expression xsi:type="MemberSelector">
        <Selector>Value.Encoder</Selector>
      </Expression>
      <Expression xsi:type="MemberSelector">
        <Selector>Seconds</Selector>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="rx:Zip" />
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="harp:CreateTimestamped" />
      </Expression>
      <Expression xsi:type="rx:PublishSubject">
        <Name>Encoder</Name>
      </Expression>
      <Expression xsi:type="SubscribeSubject">
        <Name>BehaviorEvents</Name>
      </Expression>
      <Expression xsi:type="IncludeWorkflow" Path="AllenNeuralDynamics.HarpUtils:LogHarpDeviceWithMetadata.bonsai">
        <DeviceMetadata>%YAML 1.1
---
# yaml-language-server: $schema=https://harp-tech.org/draft-02/schema/device.json
device: Behavior
whoAmI: 1216
firmwareVersion: "3.2"
hardwareTargets: "1.1"
registers:
  DigitalInputState:
    address: 32
    access: Event
    type: U8
    maskType: DigitalInputs
    description: Reflects the state of DI digital lines of each Port
  Reserved0: &amp;reserved
    address: 33
    type: U8
    access: Read
    description: Reserved for future use
    visibility: private
  OutputSet: &amp;output
    address: 34
    type: U16
    access: Write
    maskType: DigitalOutputs
    description: Set the specified digital output lines.
  OutputClear:
    &lt;&lt;: *output
    address: 35
    description: Clear the specified digital output lines
  OutputToggle:
    &lt;&lt;: *output
    address: 36
    description: Toggle the specified digital output lines
  OutputState:
    &lt;&lt;: *output
    address: 37
    description: Write the state of all digital output lines
  PortDIOSet: &amp;portDIO
    address: 38
    type: U8
    access: Write
    maskType: PortDigitalIOS
    description: Set the specified port DIO lines
  PortDIOClear:
    &lt;&lt;: *portDIO
    address: 39
    description: Clear the specified port DIO lines
  PortDIOToggle:
    &lt;&lt;: *portDIO
    address: 40
    description: Toggle the specified port DIO lines
  PortDIOState:
    &lt;&lt;: *portDIO
    address: 41
    description: Write the state of all port DIO lines
  PortDIODirection:
    &lt;&lt;: *portDIO
    address: 42
    description: Specifies which of the port DIO lines are outputs
  PortDIOStateEvent:
    &lt;&lt;: *portDIO
    address: 43
    access: Event
    description: Specifies the state of the port DIO lines on a line change
  AnalogData:
    address: 44
    type: S16
    length: 3
    access: Event
    description: Voltage at the ADC input and encoder value on Port 2
    payloadSpec:
      AnalogInput0:
        offset: 0
        description: The voltage at the output of the ADC channel 0.
      Encoder:
        offset: 1
        description: The quadrature counter value on Port 2
      AnalogInput1:
        offset: 2
        description: The voltage at the output of the ADC channel 1.
  OutputPulseEnable:
    &lt;&lt;: *output
    address: 45
    description: Enables the pulse function for the specified output lines
  PulseDOPort0: &amp;pulseDO
    address: 46
    type: U16
    access: Write
    minValue: 1
    description: Specifies the duration of the output pulse in milliseconds.
  PulseDOPort1:
    &lt;&lt;: *pulseDO
    address: 47
  PulseDOPort2:
    &lt;&lt;: *pulseDO
    address: 48
  PulseSupplyPort0:
    &lt;&lt;: *pulseDO
    address: 49
  PulseSupplyPort1:
    &lt;&lt;: *pulseDO
    address: 50
  PulseSupplyPort2:
    &lt;&lt;: *pulseDO
    address: 51
  PulseLed0:
    &lt;&lt;: *pulseDO
    address: 52
  PulseLed1:
    &lt;&lt;: *pulseDO
    address: 53
  PulseRgb0:
    &lt;&lt;: *pulseDO
    address: 54
  PulseRgb1:
    &lt;&lt;: *pulseDO
    address: 55
  PulseDO0:
    &lt;&lt;: *pulseDO
    address: 56
  PulseDO1:
    &lt;&lt;: *pulseDO
    address: 57
  PulseDO2:
    &lt;&lt;: *pulseDO
    address: 58
  PulseDO3:
    &lt;&lt;: *pulseDO
    address: 59
  PwmFrequencyDO0: &amp;pwmFreq
    address: 60
    type: U16
    access: Write
    minValue: 1
    description: Specifies the frequency of the PWM at DO0.
  PwmFrequencyDO1:
    &lt;&lt;: *pwmFreq
    address: 61
    description: Specifies the frequency of the PWM at DO1.
  PwmFrequencyDO2:
    &lt;&lt;: *pwmFreq
    address: 62
    description: Specifies the frequency of the PWM at DO2.
  PwmFrequencyDO3:
    &lt;&lt;: *pwmFreq
    address: 63
    description: Specifies the frequency of the PWM at DO3.
  PwmDutyCycleDO0: &amp;pwmDutyCycle
    address: 64
    type: U8
    access: Write
    minValue: 1
    maxValue: 99
    description: Specifies the duty cycle of the PWM at DO0.
  PwmDutyCycleDO1:
    &lt;&lt;: *pwmDutyCycle
    address: 65
    description: Specifies the duty cycle of the PWM at DO1.
  PwmDutyCycleDO2:
    &lt;&lt;: *pwmDutyCycle
    address: 66
    description: Specifies the duty cycle of the PWM at DO2.
  PwmDutyCycleDO3:
    &lt;&lt;: *pwmDutyCycle
    address: 67
    description: Specifies the duty cycle of the PWM at DO3.
  PwmStart: &amp;pwmStartStop
    address: 68
    type: U8
    access: Write
    maskType: PwmOutputs
    description: Starts the PWM on the selected output lines.
  PwmStop:
    &lt;&lt;: *pwmStartStop
    address: 69
    description: Stops the PWM on the selected output lines.
  RgbAll:
    address: 70
    type: &amp;rgbType U8
    length: 6
    access: &amp;rgbAccess Write
    description: Specifies the state of all RGB LED channels.
    payloadSpec:
      Green0:
        offset: 0
        description: The intensity of the green channel in the RGB0 LED.
      Red0:
        offset: 1
        description: The intensity of the red channel in the RGB0 LED.
      Blue0:
        offset: 2
        description: The intensity of the blue channel in the RGB0 LED.
      Green1:
        offset: 3
        description: The intensity of the green channel in the RGB1 LED.
      Red1:
        offset: 4
        description: The intensity of the red channel in the RGB1 LED.
      Blue1:
        offset: 5
        description: The intensity of the blue channel in the RGB1 LED.
  Rgb0: &amp;rgbRegister
    address: 71
    type: *rgbType
    length: 3
    access: *rgbAccess
    description: Specifies the state of the RGB0 LED channels.
    interfaceType: RgbPayload
    payloadSpec:
      Green:
        offset: 0
        description: The intensity of the green channel in the RGB LED.
      Red:
        offset: 1
        description: The intensity of the red channel in the RGB LED.
      Blue:
        offset: 2
        description: The intensity of the blue channel in the RGB LED.
  Rgb1:
    &lt;&lt;: *rgbRegister
    address: 72
    description: Specifies the state of the RGB1 LED channels.
  Led0Current: &amp;ledCurrent
    address: 73
    type: U8
    access: Write
    minValue: 2
    maxValue: 100
    description: Specifies the configuration of current to drive LED 0.
  Led1Current:
    &lt;&lt;: *ledCurrent
    address: 74
    description: Specifies the configuration of current to drive LED 1.
  Led0MaxCurrent: &amp;ledMaxCurrent
    address: 75
    type: U8
    access: Write
    minValue: 5
    maxValue: 100
    description: Specifies the configuration of current to drive LED 0.
  Led1MaxCurrent:
    &lt;&lt;: *ledMaxCurrent
    address: 76
    description: Specifies the configuration of current to drive LED 1.
  EventEnable:
    address: 77
    type: U8
    access: Write
    maskType: Events
    description: Specifies the active events in the device.
  StartCameras: &amp;cameraControl
    address: 78
    type: U8
    access: Write
    maskType: CameraOutputs
    description: Specifies the camera outputs to enable in the device.
  StopCameras:
    &lt;&lt;: *cameraControl
    access: [Write, Event]
    address: 79
    description: Specifies the camera outputs to disable in the device. An event will be issued when the trigger signal is actually stopped being generated.
  EnableServos: &amp;servoControl
    address: 80
    type: U8
    access: Write
    maskType: ServoOutputs
    description: Specifies the servo outputs to enable in the device.
  DisableServos:
    &lt;&lt;: *servoControl
    address: 81
    description: Specifies the servo outputs to disable in the device.
  EnableEncoders:
    address: 82
    type: U8
    access: Write
    maskType: EncoderInputs
    description: Specifies the port quadrature counters to enable in the device.
  EncoderMode:
    address: 83
    type: U8
    access: Write
    maskType: EncoderModeConfig
    description: Configures the operation mode of the quadrature encoders.
  Reserved2:
    &lt;&lt;: *reserved
    address: 84
  Reserved3:
    &lt;&lt;: *reserved
    address: 85
  Reserved4:
    &lt;&lt;: *reserved
    address: 86
  Reserved5:
    &lt;&lt;: *reserved
    address: 87
  Reserved6:
    &lt;&lt;: *reserved
    address: 88
  Reserved7:
    &lt;&lt;: *reserved
    address: 89
  Reserved8:
    &lt;&lt;: *reserved
    address: 90
  Reserved9:
    &lt;&lt;: *reserved
    address: 91
  Camera0Frame: &amp;frameAcquired
    address: 92
    type: U8
    access: Event
    maskType: FrameAcquired
    description: Specifies that a frame was acquired on camera 0.
  Camera0Frequency: &amp;cameraFreq
    address: 93
    type: U16
    access: Write
    minValue: 1
    maxValue: 600
    description: Specifies the trigger frequency for camera 0.
  Camera1Frame:
    &lt;&lt;: *frameAcquired
    address: 94
    description: Specifies that a frame was acquired on camera 1.
  Camera1Frequency:
    &lt;&lt;: *cameraFreq
    address: 95
    description: Specifies the trigger frequency for camera 1.
  Reserved10:
    &lt;&lt;: *reserved
    address: 96
  Reserved11:
    &lt;&lt;: *reserved
    address: 97
  Reserved12:
    &lt;&lt;: *reserved
    address: 98
  Reserved13:
    &lt;&lt;: *reserved
    address: 99
  ServoMotor2Period: &amp;servoPeriod
    address: 100
    type: U16
    access: Write
    minValue: 2
    maxValue: 65534
    description: Specifies the period of the servo motor in DO2, in microseconds.
  ServoMotor2Pulse: &amp;servoPulse
    address: 101
    type: U16
    access: Write
    minValue: 6
    maxValue: 65530
    description: Specifies the pulse of the servo motor in DO2, in microseconds.
  ServoMotor3Period:
    &lt;&lt;: *servoPeriod
    address: 102
    description: Specifies the period of the servo motor in DO3, in microseconds.
  ServoMotor3Pulse:
    &lt;&lt;: *servoPulse
    address: 103
    description: Specifies the pulse of the servo motor in DO3, in microseconds.
  Reserved14:
    &lt;&lt;: *reserved
    address: 104
  Reserved15:
    &lt;&lt;: *reserved
    address: 105
  Reserved16:
    &lt;&lt;: *reserved
    address: 106
  Reserved17:
    &lt;&lt;: *reserved
    address: 107
  EncoderReset:
    address: 108
    type: U8
    access: Write
    maskType: EncoderInputs
    description: Reset the counter of the specified encoders to zero.
  Reserved18:
    &lt;&lt;: *reserved
    address: 109
  EnableSerialTimestamp:
    address: 110
    type: U8
    access: Write
    description: Enables the timestamp for serial TX.
  MimicPort0IR: &amp;mimic
    address: 111
    type: U8
    access: Write
    maskType: MimicOutput
    description: Specifies the digital output to mimic the Port 0 IR state.
  MimicPort1IR:
    &lt;&lt;: *mimic
    address: 112
    description: Specifies the digital output to mimic the Port 1 IR state.
  MimicPort2IR:
    &lt;&lt;: *mimic
    address: 113
    description: Specifies the digital output to mimic the Port 2 IR state.
  Reserved20:
    &lt;&lt;: *reserved
    address: 114
  Reserved21:
    &lt;&lt;: *reserved
    address: 115
  Reserved22:
    &lt;&lt;: *reserved
    address: 116
  MimicPort0Valve:
    &lt;&lt;: *mimic
    address: 117
    description: Specifies the digital output to mimic the Port 0 valve state.
  MimicPort1Valve:
    &lt;&lt;: *mimic
    address: 118
    description: Specifies the digital output to mimic the Port 1 valve state.
  MimicPort2Valve:
    &lt;&lt;: *mimic
    address: 119
    description: Specifies the digital output to mimic the Port 2 valve state.
  Reserved23:
    &lt;&lt;: *reserved
    address: 120
  Reserved24:
    &lt;&lt;: *reserved
    address: 121
  PokeInputFilter:
    address: 122
    type: U8
    access: Write
    description: Specifies the low pass filter time value for poke inputs, in ms.
bitMasks:
  DigitalInputs:
    description: Specifies the state of port digital input lines.
    bits:
      DIPort0: 0x1
      DIPort1: 0x2
      DIPort2: 0x4
      DI3: 0x8
  DigitalOutputs:
    description: Specifies the state of port digital output lines.
    bits:
      DOPort0: 0x1
      DOPort1: 0x2
      DOPort2: 0x4
      SupplyPort0: 0x8
      SupplyPort1: 0x10
      SupplyPort2: 0x20
      Led0: 0x40
      Led1: 0x80
      Rgb0: 0x100
      Rgb1: 0x200
      DO0: 0x400
      DO1: 0x800
      DO2: 0x1000
      DO3: 0x2000
  PortDigitalIOS:
    description: Specifies the state of the port DIO lines.
    bits:
      DIO0: 0x1
      DIO1: 0x2
      DIO2: 0x4
  PwmOutputs:
    description: Specifies the state of PWM output lines.
    bits:
      PwmDO0: 0x1
      PwmDO1: 0x2
      PwmDO2: 0x4
      PwmDO3: 0x8
  Events:
    description: Specifies the active events in the device.
    bits:
      PortDI: 0x1
      PortDIO: 0x2
      AnalogData: 0x4
      Camera0: 0x8
      Camera1: 0x10
  CameraOutputs:
    description: Specifies camera output enable bits.
    bits:
      CameraOutput0: 0x1
      CameraOutput1: 0x2
  ServoOutputs:
    description: Specifies servo output enable bits.
    bits:
      ServoOutput2: 0x4
      ServoOutput3: 0x8
  EncoderInputs:
    description: Specifies quadrature counter enable bits.
    bits:
      EncoderPort2: 0x4
  FrameAcquired:
    description: Specifies that camera frame was acquired.
    bits:
      FrameAcquired: 0x1
groupMasks:
  MimicOutput:
    description: Specifies the target IO on which to mimic the specified register.
    values:
      None: 0
      DIO0: 1
      DIO1: 2
      DIO2: 3
      DO0: 4
      DO1: 5
      DO2: 6
      DO3: 7
  EncoderModeConfig:
    description: Specifies the type of reading made from the quadrature encoder.
    values:
      Position: 0
      Displacement: 1</DeviceMetadata>
        <Modality>Behavior</Modality>
        <DeviceName xsi:nil="true" />
      </Expression>
      <Expression xsi:type="IncludeWorkflow" Path="..\Extensions\behavior_camera.bonsai">
        <Format>{0}/body_video.avi</Format>
        <Index>1</Index>
        <EventName>BodyCamera</EventName>
      </Expression>
      <Expression xsi:type="SubscribeSubject">
        <Name>BehaviorEvents</Name>
      </Expression>
      <Expression xsi:type="SubscribeSubject">
        <Name>StartSession</Name>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="rx:SubscribeWhen" />
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="rx:Take">
          <rx:Count>1</rx:Count>
        </Combinator>
      </Expression>
      <Expression xsi:type="IncludeWorkflow" Path="..\Extensions\SLAP-Start.bonsai" />
      <Expression xsi:type="IncludeWorkflow" Path="BonVision:Logging.LogEvent.bonsai">
        <Format>STARTSLAP</Format>
        <Selector xsi:nil="true" />
        <Name>Allen.Log</Name>
      </Expression>
      <Expression xsi:type="IncludeWorkflow" Path="..\Extensions\behavior_camera.bonsai">
        <Format>{0}/eye_video.avi</Format>
        <Index>2</Index>
        <EventName>EyeCamera</EventName>
      </Expression>
      <Expression xsi:type="ExternalizedMapping">
        <Property Name="Value" DisplayName="stimulus_table_path" />
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="StringProperty">
          <Value>C:\BonsaiDataPredictiveProcessingTest\openscope-community-predictive-processing\code\stimulus-control\src\Mindscope\examples\test_short.csv</Value>
        </Combinator>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="gl:RenderFrame" />
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="rx:Take">
          <rx:Count>1</rx:Count>
        </Combinator>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="rx:SubscribeWhen" />
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="rx:Take">
          <rx:Count>1</rx:Count>
        </Combinator>
      </Expression>
      <Expression xsi:type="rx:SelectMany">
        <Workflow>
          <Nodes>
            <Expression xsi:type="WorkflowInput">
              <Name>Source1</Name>
            </Expression>
            <Expression xsi:type="PropertyMapping">
              <PropertyMappings>
                <Property Name="FileName" />
              </PropertyMappings>
            </Expression>
            <Expression xsi:type="io:CsvReader">
              <io:FileName>C:\BonsaiDataPredictiveProcessingTest\openscope-community-predictive-processing\code\stimulus-control\src\Mindscope\examples\test_short.csv</io:FileName>
              <io:ListSeparator>,</io:ListSeparator>
              <io:SkipRows>1</io:SkipRows>
            </Expression>
            <Expression xsi:type="WorkflowOutput" />
          </Nodes>
          <Edges>
            <Edge From="0" To="1" Label="Source1" />
            <Edge From="1" To="2" Label="Source1" />
            <Edge From="2" To="3" Label="Source1" />
          </Edges>
        </Workflow>
      </Expression>
      <Expression xsi:type="scr:ExpressionTransform">
        <scr:Expression>new(
Int32.Parse(it[0]) as BlockNumber,
it[1] as BlockLabel,
Double.Parse(it[2]) as BlockDurationMinutes,
Int32.Parse(it[3]) as TrialNumber,
Int32.Parse(it[4]) as SequenceNumber,
Int32.Parse(it[5]) as TrialInSequence,
Double.Parse(it[6]) as Contrast,
Double.Parse(it[7]) as Delay,
Double.Parse(it[8]) as DiameterX,
Double.Parse(it[9]) as DiameterY,
Double.Parse(it[10]) as Duration,
Double.Parse(it[11]) * Math.PI / 180 as Orientation,
Double.Parse(it[12]) as SpatialFrequency,
Double.Parse(it[13]) as TemporalFrequency,
Double.Parse(it[14]) as X,
Double.Parse(it[15]) as Y,
it[16] as Phase,
it[17] as TrialType,
it[18] as BlockType,
Guid.NewGuid().ToString() as Id)</scr:Expression>
      </Expression>
      <Expression xsi:type="ExternalizedMapping">
        <Property Name="DueTime" DisplayName="SettingUpDelay" />
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="gl:Delay">
          <gl:DueTime>PT10S</gl:DueTime>
        </Combinator>
      </Expression>
      <Expression xsi:type="SubscribeSubject">
        <Name>TemporalPhase</Name>
      </Expression>
      <Expression xsi:type="PropertyMapping">
        <PropertyMappings>
          <Property Name="Phase" />
        </PropertyMappings>
      </Expression>
      <Expression xsi:type="GroupWorkflow">
        <Name>GenericSequence</Name>
        <Workflow>
          <Nodes>
            <Expression xsi:type="WorkflowInput">
              <Name>Source1</Name>
            </Expression>
            <Expression xsi:type="ExternalizedMapping">
              <Property Name="Phase" />
            </Expression>
            <Expression xsi:type="rx:CreateObservable">
              <Workflow>
                <Nodes>
                  <Expression xsi:type="WorkflowInput">
                    <Name>Source1</Name>
                  </Expression>
                  <Expression xsi:type="rx:Condition">
                    <Workflow>
                      <Nodes>
                        <Expression xsi:type="WorkflowInput">
                          <Name>Source1</Name>
                        </Expression>
                        <Expression xsi:type="MemberSelector">
                          <Selector>BlockType</Selector>
                        </Expression>
                        <Expression xsi:type="Equal">
                          <Operand xsi:type="StringProperty">
                            <Value>movie</Value>
                          </Operand>
                        </Expression>
                        <Expression xsi:type="WorkflowOutput" />
                      </Nodes>
                      <Edges>
                        <Edge From="0" To="1" Label="Source1" />
                        <Edge From="1" To="2" Label="Source1" />
                        <Edge From="2" To="3" Label="Source1" />
                      </Edges>
                    </Workflow>
                  </Expression>
                  <Expression xsi:type="rx:CreateObservable">
                    <Name>Movies</Name>
                    <Workflow>
                      <Nodes>
                        <Expression xsi:type="WorkflowInput">
                          <Name>Source1</Name>
                        </Expression>
                        <Expression xsi:type="rx:AsyncSubject">
                          <Name>Parameters</Name>
                        </Expression>
                        <Expression xsi:type="SubscribeSubject">
                          <Name>Draw</Name>
                        </Expression>
                        <Expression xsi:type="SubscribeSubject">
                          <Name>Parameters</Name>
                        </Expression>
                        <Expression xsi:type="PropertyMapping">
                          <PropertyMappings>
                            <Property Name="Angle" Selector="Orientation" />
                            <Property Name="ExtentX" Selector="DiameterX" />
                            <Property Name="ExtentY" Selector="DiameterY" />
                            <Property Name="LocationX" Selector="X" />
                            <Property Name="LocationY" Selector="Y" />
                            <Property Name="TextureName" Selector="BlockLabel" />
                          </PropertyMappings>
                        </Expression>
                        <Expression xsi:type="IncludeWorkflow" Path="BonVision:Primitives.DrawVideo.bonsai">
                          <TextureName>Trippy</TextureName>
                          <PlaybackRate>30</PlaybackRate>
                          <Loop>false</Loop>
                          <Angle>0</Angle>
                          <ExtentX>120</ExtentX>
                          <ExtentY>95</ExtentY>
                          <LocationX>0</LocationX>
                          <LocationY>0</LocationY>
                          <ScaleX>1</ScaleX>
                          <ScaleY>1</ScaleY>
                          <ShiftX>0</ShiftX>
                          <ShiftY>0</ShiftY>
                          <Layer>0</Layer>
                        </Expression>
                        <Expression xsi:type="IncludeWorkflow" Path="BonVision:Logging.LogEvent.bonsai">
                          <Format>MovieFrame-{0}</Format>
                          <Selector>it</Selector>
                          <Name>Allen.Log</Name>
                        </Expression>
                        <Expression xsi:type="SubscribeSubject">
                          <Name>Parameters</Name>
                        </Expression>
                        <Expression xsi:type="scr:ExpressionTransform">
                          <scr:Expression>TimeSpan.FromSeconds(Duration)</scr:Expression>
                        </Expression>
                        <Expression xsi:type="PropertyMapping">
                          <PropertyMappings>
                            <Property Name="DueTime" />
                          </PropertyMappings>
                        </Expression>
                        <Expression xsi:type="Combinator">
                          <Combinator xsi:type="gl:Timer">
                            <gl:DueTime>PT10S</gl:DueTime>
                          </Combinator>
                        </Expression>
                        <Expression xsi:type="Combinator">
                          <Combinator xsi:type="gl:SampleOnRenderFrame" />
                        </Expression>
                        <Expression xsi:type="SubscribeSubject">
                          <Name>Parameters</Name>
                        </Expression>
                        <Expression xsi:type="Combinator">
                          <Combinator xsi:type="rx:Zip" />
                        </Expression>
                        <Expression xsi:type="IncludeWorkflow" Path="BonVision:Logging.LogEvent.bonsai">
                          <Format>StimEnd-{0}</Format>
                          <Selector>Item2.Id</Selector>
                          <Name>Allen.Log</Name>
                        </Expression>
                        <Expression xsi:type="Combinator">
                          <Combinator xsi:type="rx:TakeUntil" />
                        </Expression>
                        <Expression xsi:type="SubscribeSubject">
                          <Name>Parameters</Name>
                        </Expression>
                        <Expression xsi:type="scr:ExpressionTransform">
                          <scr:Expression>TimeSpan.FromSeconds(Delay)</scr:Expression>
                        </Expression>
                        <Expression xsi:type="PropertyMapping">
                          <PropertyMappings>
                            <Property Name="DueTime" />
                          </PropertyMappings>
                        </Expression>
                        <Expression xsi:type="Combinator">
                          <Combinator xsi:type="gl:Timer">
                            <gl:DueTime>PT0S</gl:DueTime>
                          </Combinator>
                        </Expression>
                        <Expression xsi:type="SubscribeSubject">
                          <Name>Parameters</Name>
                        </Expression>
                        <Expression xsi:type="Combinator">
                          <Combinator xsi:type="rx:Zip" />
                        </Expression>
                        <Expression xsi:type="IncludeWorkflow" Path="BonVision:Logging.LogEvent.bonsai">
                          <Format>StimStart-{0}</Format>
                          <Selector>Item2.Id</Selector>
                          <Name>Allen.Log</Name>
                        </Expression>
                        <Expression xsi:type="IncludeWorkflow" Path="..\Extensions\SLAP-Tag.bonsai" />
                        <Expression xsi:type="Combinator">
                          <Combinator xsi:type="rx:SubscribeWhen" />
                        </Expression>
                        <Expression xsi:type="Combinator">
                          <Combinator xsi:type="rx:Last" />
                        </Expression>
                        <Expression xsi:type="SubscribeSubject">
                          <Name>Parameters</Name>
                        </Expression>
                        <Expression xsi:type="scr:ExpressionTransform">
                          <scr:Expression>new(
    it.Contrast as Contrast,
    it.Delay as Delay,
    it.DiameterX as DiameterX,
    it.DiameterY as DiameterY,
    it.Duration as Duration,
    it.Orientation as Orientation,
    it.SpatialFrequency as SpatialFrequency,
    it.TemporalFrequency as TemporalFrequency,
    it.X as X,
    it.Y as Y,
    Convert.ToDouble(0) as Phase,
    it.TrialType as TrialType,           
    it.BlockType as BlockType, 
    it.Id as Id,
    it.BlockNumber as BlockNumber, 
    it.BlockLabel as BlockLabel,
    it.TrialNumber as TrialNumber, 
    it.SequenceNumber as SequenceNumber,
    it.TrialInSequence as TrialInSequence
)</scr:Expression>
                        </Expression>
                        <Expression xsi:type="Combinator">
                          <Combinator xsi:type="rx:WithLatestFrom" />
                        </Expression>
                        <Expression xsi:type="scr:ExpressionTransform">
                          <scr:Expression>it.Item2</scr:Expression>
                        </Expression>
                        <Expression xsi:type="WorkflowOutput" />
                      </Nodes>
                      <Edges>
                        <Edge From="0" To="1" Label="Source1" />
                        <Edge From="2" To="5" Label="Source1" />
                        <Edge From="3" To="4" Label="Source1" />
                        <Edge From="4" To="5" Label="Source2" />
                        <Edge From="5" To="6" Label="Source1" />
                        <Edge From="6" To="15" Label="Source1" />
                        <Edge From="7" To="8" Label="Source1" />
                        <Edge From="8" To="9" Label="Source1" />
                        <Edge From="9" To="10" Label="Source1" />
                        <Edge From="10" To="11" Label="Source1" />
                        <Edge From="11" To="13" Label="Source1" />
                        <Edge From="12" To="13" Label="Source2" />
                        <Edge From="13" To="14" Label="Source1" />
                        <Edge From="14" To="15" Label="Source2" />
                        <Edge From="15" To="24" Label="Source1" />
                        <Edge From="16" To="17" Label="Source1" />
                        <Edge From="17" To="18" Label="Source1" />
                        <Edge From="18" To="19" Label="Source1" />
                        <Edge From="19" To="21" Label="Source1" />
                        <Edge From="20" To="21" Label="Source2" />
                        <Edge From="21" To="22" Label="Source1" />
                        <Edge From="22" To="23" Label="Source1" />
                        <Edge From="23" To="24" Label="Source2" />
                        <Edge From="24" To="25" Label="Source1" />
                        <Edge From="25" To="28" Label="Source1" />
                        <Edge From="26" To="27" Label="Source1" />
                        <Edge From="27" To="28" Label="Source2" />
                        <Edge From="28" To="29" Label="Source1" />
                        <Edge From="29" To="30" Label="Source1" />
                      </Edges>
                    </Workflow>
                  </Expression>
                  <Expression xsi:type="rx:Condition">
                    <Workflow>
                      <Nodes>
                        <Expression xsi:type="WorkflowInput">
                          <Name>Source1</Name>
                        </Expression>
                        <Expression xsi:type="MemberSelector">
                          <Selector>BlockType</Selector>
                        </Expression>
                        <Expression xsi:type="NotEqual">
                          <Operand xsi:type="StringProperty">
                            <Value>movie</Value>
                          </Operand>
                        </Expression>
                        <Expression xsi:type="WorkflowOutput" />
                      </Nodes>
                      <Edges>
                        <Edge From="0" To="1" Label="Source1" />
                        <Edge From="1" To="2" Label="Source1" />
                        <Edge From="2" To="3" Label="Source1" />
                      </Edges>
                    </Workflow>
                  </Expression>
                  <Expression xsi:type="ExternalizedMapping">
                    <Property Name="Phase" />
                  </Expression>
                  <Expression xsi:type="rx:CreateObservable">
                    <Name>DriftingGrating</Name>
                    <Workflow>
                      <Nodes>
                        <Expression xsi:type="WorkflowInput">
                          <Name>Source1</Name>
                        </Expression>
                        <Expression xsi:type="rx:AsyncSubject">
                          <Name>Parameters</Name>
                        </Expression>
                        <Expression xsi:type="SubscribeSubject">
                          <Name>Draw</Name>
                        </Expression>
                        <Expression xsi:type="SubscribeSubject">
                          <Name>Parameters</Name>
                        </Expression>
                        <Expression xsi:type="PropertyMapping">
                          <PropertyMappings>
                            <Property Name="LocationX" Selector="X" />
                            <Property Name="LocationY" Selector="Y" />
                            <Property Name="Angle" Selector="Orientation" />
                            <Property Name="SpatialFrequency" Selector="SpatialFrequency" />
                            <Property Name="TemporalFrequency" Selector="TemporalFrequency" />
                            <Property Name="Contrast" Selector="Contrast" />
                            <Property Name="ExtentX" Selector="DiameterX" />
                            <Property Name="ExtentY" Selector="DiameterY" />
                          </PropertyMappings>
                        </Expression>
                        <Expression xsi:type="ExternalizedMapping">
                          <Property Name="Value" DisplayName="Phase" />
                        </Expression>
                        <Expression xsi:type="Combinator">
                          <Combinator xsi:type="FloatProperty">
                            <Value>133</Value>
                          </Combinator>
                        </Expression>
                        <Expression xsi:type="SubscribeSubject">
                          <Name>Parameters</Name>
                        </Expression>
                        <Expression xsi:type="Combinator">
                          <Combinator xsi:type="rx:Sample" />
                        </Expression>
                        <Expression xsi:type="SubscribeSubject">
                          <Name>Parameters</Name>
                        </Expression>
                        <Expression xsi:type="scr:ExpressionTransform">
                          <scr:Expression>Phase == "wheel" || Phase == "halt" || Phase == "fixed" ? 1 : 0</scr:Expression>
                        </Expression>
                        <Expression xsi:type="Combinator">
                          <Combinator xsi:type="rx:Zip" />
                        </Expression>
                        <Expression xsi:type="Multiply" />
                        <Expression xsi:type="SubscribeSubject">
                          <Name>Parameters</Name>
                        </Expression>
                        <Expression xsi:type="scr:ExpressionTransform">
                          <scr:Expression>Phase == "wheel" || Phase == "halt" || Phase == "fixed" ? 0 : Convert.ToDouble(Phase)</scr:Expression>
                        </Expression>
                        <Expression xsi:type="Combinator">
                          <Combinator xsi:type="rx:Zip" />
                        </Expression>
                        <Expression xsi:type="Add" />
                        <Expression xsi:type="PropertyMapping">
                          <PropertyMappings>
                            <Property Name="Phase" />
                          </PropertyMappings>
                        </Expression>
                        <Expression xsi:type="IncludeWorkflow" Path="BonVision:Primitives.DrawGratings.bonsai">
                          <LocationX>-30</LocationX>
                          <LocationY>10</LocationY>
                          <Layer>0</Layer>
                          <ExtentX>20</ExtentX>
                          <ExtentY>20</ExtentY>
                          <SpatialFrequency>0.08</SpatialFrequency>
                          <TemporalFrequency>4</TemporalFrequency>
                          <Phase>0</Phase>
                          <Angle>0</Angle>
                          <SquareWave>false</SquareWave>
                          <Contrast>0.8</Contrast>
                          <DutyCycle xsi:nil="true" />
                          <Radius>1</Radius>
                          <Aperture>0</Aperture>
                          <Opacity>1</Opacity>
                        </Expression>
                        <Expression xsi:type="SubscribeSubject">
                          <Name>Parameters</Name>
                        </Expression>
                        <Expression xsi:type="scr:ExpressionTransform">
                          <scr:Expression>TimeSpan.FromSeconds(Duration)</scr:Expression>
                        </Expression>
                        <Expression xsi:type="PropertyMapping">
                          <PropertyMappings>
                            <Property Name="DueTime" />
                          </PropertyMappings>
                        </Expression>
                        <Expression xsi:type="Combinator">
                          <Combinator xsi:type="gl:Timer">
                            <gl:DueTime>PT0.25S</gl:DueTime>
                          </Combinator>
                        </Expression>
                        <Expression xsi:type="Combinator">
                          <Combinator xsi:type="gl:SampleOnRenderFrame" />
                        </Expression>
                        <Expression xsi:type="SubscribeSubject">
                          <Name>Parameters</Name>
                        </Expression>
                        <Expression xsi:type="Combinator">
                          <Combinator xsi:type="rx:Zip" />
                        </Expression>
                        <Expression xsi:type="IncludeWorkflow" Path="BonVision:Logging.LogEvent.bonsai">
                          <Format>StimEnd-{0}</Format>
                          <Selector>Item2.Id</Selector>
                          <Name>Allen.Log</Name>
                        </Expression>
                        <Expression xsi:type="Combinator">
                          <Combinator xsi:type="rx:TakeUntil" />
                        </Expression>
                        <Expression xsi:type="SubscribeSubject">
                          <Name>Parameters</Name>
                        </Expression>
                        <Expression xsi:type="scr:ExpressionTransform">
                          <scr:Expression>TimeSpan.FromSeconds(Delay)</scr:Expression>
                        </Expression>
                        <Expression xsi:type="PropertyMapping">
                          <PropertyMappings>
                            <Property Name="DueTime" />
                          </PropertyMappings>
                        </Expression>
                        <Expression xsi:type="Combinator">
                          <Combinator xsi:type="gl:Timer">
                            <gl:DueTime>PT0S</gl:DueTime>
                          </Combinator>
                        </Expression>
                        <Expression xsi:type="SubscribeSubject">
                          <Name>Parameters</Name>
                        </Expression>
                        <Expression xsi:type="Combinator">
                          <Combinator xsi:type="rx:Zip" />
                        </Expression>
                        <Expression xsi:type="IncludeWorkflow" Path="BonVision:Logging.LogEvent.bonsai">
                          <Format>StimStart-{0}</Format>
                          <Selector>Item2.Id</Selector>
                          <Name>Allen.Log</Name>
                        </Expression>
                        <Expression xsi:type="IncludeWorkflow" Path="..\Extensions\SLAP-Tag.bonsai" />
                        <Expression xsi:type="Combinator">
                          <Combinator xsi:type="rx:SubscribeWhen" />
                        </Expression>
                        <Expression xsi:type="Combinator">
                          <Combinator xsi:type="rx:TakeLast">
                            <rx:Count>1</rx:Count>
                          </Combinator>
                        </Expression>
                        <Expression xsi:type="SubscribeSubject">
                          <Name>ActualParameters</Name>
                        </Expression>
                        <Expression xsi:type="Combinator">
                          <Combinator xsi:type="rx:WithLatestFrom" />
                        </Expression>
                        <Expression xsi:type="scr:ExpressionTransform">
                          <scr:Expression>it.Item2</scr:Expression>
                        </Expression>
                        <Expression xsi:type="WorkflowOutput" />
                        <Expression xsi:type="SubscribeSubject">
                          <Name>Parameters</Name>
                        </Expression>
                        <Expression xsi:type="Combinator">
                          <Combinator xsi:type="rx:Zip" />
                        </Expression>
                        <Expression xsi:type="scr:ExpressionTransform">
                          <scr:Expression>new(
    it.Item1.Contrast as Contrast,
    it.Item1.Delay as Delay,
    it.Item1.DiameterX as DiameterX,
    it.Item1.DiameterY as DiameterY,
    it.Item1.Duration as Duration,
    it.Item1.Orientation as Orientation,
    it.Item1.SpatialFrequency as SpatialFrequency,
    it.Item1.TemporalFrequency as TemporalFrequency,
    it.Item1.X as X,
    it.Item1.Y as Y,
    it.Item2 as Phase,
    it.Item1.TrialType as TrialType,           
    it.Item1.BlockType as BlockType, 
    it.Item1.Id as Id,
    it.Item1.BlockNumber as BlockNumber, 
    it.Item1.BlockLabel as BlockLabel,
    it.Item1.TrialNumber as TrialNumber, 
    it.Item1.SequenceNumber as SequenceNumber,
    it.Item1.TrialInSequence as TrialInSequence
)</scr:Expression>
                        </Expression>
                        <Expression xsi:type="rx:PublishSubject">
                          <Name>ActualParameters</Name>
                        </Expression>
                      </Nodes>
                      <Edges>
                        <Edge From="0" To="1" Label="Source1" />
                        <Edge From="2" To="18" Label="Source1" />
                        <Edge From="3" To="4" Label="Source1" />
                        <Edge From="4" To="18" Label="Source2" />
                        <Edge From="5" To="6" Label="Source1" />
                        <Edge From="6" To="8" Label="Source1" />
                        <Edge From="7" To="8" Label="Source2" />
                        <Edge From="8" To="11" Label="Source1" />
                        <Edge From="9" To="10" Label="Source1" />
                        <Edge From="10" To="11" Label="Source2" />
                        <Edge From="11" To="12" Label="Source1" />
                        <Edge From="12" To="15" Label="Source1" />
                        <Edge From="13" To="14" Label="Source1" />
                        <Edge From="14" To="15" Label="Source2" />
                        <Edge From="15" To="16" Label="Source1" />
                        <Edge From="16" To="17" Label="Source1" />
                        <Edge From="16" To="43" Label="Source2" />
                        <Edge From="17" To="18" Label="Source3" />
                        <Edge From="18" To="27" Label="Source1" />
                        <Edge From="19" To="20" Label="Source1" />
                        <Edge From="20" To="21" Label="Source1" />
                        <Edge From="21" To="22" Label="Source1" />
                        <Edge From="22" To="23" Label="Source1" />
                        <Edge From="23" To="25" Label="Source1" />
                        <Edge From="24" To="25" Label="Source2" />
                        <Edge From="25" To="26" Label="Source1" />
                        <Edge From="26" To="27" Label="Source2" />
                        <Edge From="27" To="36" Label="Source1" />
                        <Edge From="28" To="29" Label="Source1" />
                        <Edge From="29" To="30" Label="Source1" />
                        <Edge From="30" To="31" Label="Source1" />
                        <Edge From="31" To="33" Label="Source1" />
                        <Edge From="32" To="33" Label="Source2" />
                        <Edge From="33" To="34" Label="Source1" />
                        <Edge From="34" To="35" Label="Source1" />
                        <Edge From="35" To="36" Label="Source2" />
                        <Edge From="36" To="37" Label="Source1" />
                        <Edge From="37" To="39" Label="Source1" />
                        <Edge From="38" To="39" Label="Source2" />
                        <Edge From="39" To="40" Label="Source1" />
                        <Edge From="40" To="41" Label="Source1" />
                        <Edge From="42" To="43" Label="Source1" />
                        <Edge From="43" To="44" Label="Source1" />
                        <Edge From="44" To="45" Label="Source1" />
                      </Edges>
                    </Workflow>
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="rx:Merge" />
                  </Expression>
                  <Expression xsi:type="WorkflowOutput" />
                </Nodes>
                <Edges>
                  <Edge From="0" To="1" Label="Source1" />
                  <Edge From="0" To="3" Label="Source1" />
                  <Edge From="1" To="2" Label="Source1" />
                  <Edge From="2" To="6" Label="Source1" />
                  <Edge From="3" To="5" Label="Source1" />
                  <Edge From="4" To="5" Label="Source2" />
                  <Edge From="5" To="6" Label="Source2" />
                  <Edge From="6" To="7" Label="Source1" />
                </Edges>
              </Workflow>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="rx:Merge" />
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="rx:ToArray" />
            </Expression>
            <Expression xsi:type="rx:AsyncSubject">
              <Name>ListStim</Name>
            </Expression>
            <Expression xsi:type="SubscribeSubject">
              <Name>ListStim</Name>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="rx:Merge" />
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="rx:Concat" />
            </Expression>
            <Expression xsi:type="WorkflowOutput" />
          </Nodes>
          <Edges>
            <Edge From="0" To="2" Label="Source1" />
            <Edge From="1" To="2" Label="Source2" />
            <Edge From="2" To="3" Label="Source1" />
            <Edge From="3" To="4" Label="Source1" />
            <Edge From="4" To="5" Label="Source1" />
            <Edge From="6" To="7" Label="Source1" />
            <Edge From="7" To="8" Label="Source1" />
            <Edge From="8" To="9" Label="Source1" />
          </Edges>
        </Workflow>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="rx:Take">
          <rx:Count>1</rx:Count>
        </Combinator>
      </Expression>
      <Expression xsi:type="ExternalizedMapping">
        <Property Name="DueTime" DisplayName="stimulus_table_duration" />
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="rx:Delay">
          <rx:DueTime>PT6M30S</rx:DueTime>
        </Combinator>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="rx:TakeUntil" />
      </Expression>
      <Expression xsi:type="rx:BehaviorSubject">
        <Name>Orientation</Name>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="rx:TakeLast">
          <rx:Count>1</rx:Count>
        </Combinator>
      </Expression>
      <Expression xsi:type="rx:PublishSubject">
        <Name>EndExpt</Name>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="wie:KeyDown">
          <wie:Filter>Space</wie:Filter>
          <wie:SuppressRepetitions>true</wie:SuppressRepetitions>
        </Combinator>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="rx:Take">
          <rx:Count>1</rx:Count>
        </Combinator>
      </Expression>
      <Expression xsi:type="rx:PublishSubject">
        <Name>StartSession</Name>
      </Expression>
      <Expression xsi:type="IncludeWorkflow" Path="BonVision:Logging.LogEvent.bonsai">
        <Format>START</Format>
        <Selector xsi:nil="true" />
        <Name>Allen.Log</Name>
      </Expression>
      <Expression xsi:type="SubscribeSubject">
        <Name>Encoder</Name>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="gl:RenderFrame" />
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="rx:Sample" />
      </Expression>
      <Expression xsi:type="MemberSelector">
        <Selector>Value</Selector>
      </Expression>
      <Expression xsi:type="scr:ExpressionTransform">
        <scr:Expression>new(
it as Count,
360.03*it/8192.0 as Degrees)

</scr:Expression>
      </Expression>
      <Expression xsi:type="IncludeWorkflow" Path="BonVision:Logging.LogEvent.bonsai">
        <Format>Wheel-Count-{0}-Deg-{1}</Format>
        <Selector>Count,Degrees</Selector>
        <Name>Allen.Log</Name>
      </Expression>
      <Expression xsi:type="MemberSelector">
        <Selector>Degrees</Selector>
      </Expression>
      <Expression xsi:type="rx:PublishSubject">
        <Name>WheelDegrees</Name>
      </Expression>
      <Expression xsi:type="ExternalizedMapping">
        <Property Name="Value" DisplayName="WheelRadiusOverScreenRatio" />
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="FloatProperty">
          <Value>0.36</Value>
        </Combinator>
      </Expression>
      <Expression xsi:type="ExternalizedMapping">
        <Property Name="Value" DisplayName="MotorCouplingCPD" />
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="FloatProperty">
          <Value>0.04</Value>
        </Combinator>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="rx:CombineLatest" />
      </Expression>
      <Expression xsi:type="scr:ExpressionTransform">
        <scr:Expression>2 * Math.PI * it.Item2 * it.Item1 / (Math.tan((1/it.Item3) * Math.PI / 180))</scr:Expression>
      </Expression>
      <Expression xsi:type="Mod">
        <Operand xsi:type="DoubleProperty">
          <Value>360</Value>
        </Operand>
      </Expression>
      <Expression xsi:type="scr:ExpressionTransform">
        <scr:Expression>it * Math.PI / 180</scr:Expression>
      </Expression>
      <Expression xsi:type="rx:PublishSubject">
        <Name>TemporalPhase</Name>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="gl:RenderFrame" />
      </Expression>
      <Expression xsi:type="SubscribeSubject">
        <Name>LoggingRootPath</Name>
      </Expression>
      <Expression xsi:type="Format">
        <Format>{0}/orientations_logger.csv</Format>
        <Selector>it</Selector>
      </Expression>
      <Expression xsi:type="PropertyMapping">
        <PropertyMappings>
          <Property Name="FileName" />
        </PropertyMappings>
      </Expression>
      <Expression xsi:type="IncludeWorkflow" Path="BonVision:Logging.FrameEventLogger.bonsai">
        <Name>Allen.Log</Name>
        <Append>false</Append>
        <Overwrite>true</Overwrite>
        <Suffix>None</Suffix>
        <FileName>C:/BonsaiDataPredictiveProcessing/769904/769904_20251017T222126/orientations_logger.csv</FileName>
      </Expression>
      <Expression xsi:type="IncludeWorkflow" Path="BonVision:Logging.LogEvent.bonsai">
        <Format>Frame</Format>
        <Selector xsi:nil="true" />
        <Name>Allen.Log</Name>
      </Expression>
      <Expression xsi:type="SubscribeSubject">
        <Name>EndSession</Name>
      </Expression>
      <Expression xsi:type="IncludeWorkflow" Path="BonVision:Logging.LogEvent.bonsai">
        <Format>EndFrame</Format>
        <Selector xsi:nil="true" />
        <Name>Allen.Log</Name>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="rx:TakeUntil" />
      </Expression>
      <Expression xsi:type="SubscribeSubject">
        <Name>Orientation</Name>
      </Expression>
      <Expression xsi:type="SubscribeSubject">
        <Name>LoggingRootPath</Name>
      </Expression>
      <Expression xsi:type="Format">
        <Format>{0}/orientations_orientations.csv</Format>
        <Selector>it</Selector>
      </Expression>
      <Expression xsi:type="PropertyMapping">
        <PropertyMappings>
          <Property Name="FileName" />
        </PropertyMappings>
      </Expression>
      <Expression xsi:type="Annotation">
        <Name>Save Orientation Ordering</Name>
        <Text><![CDATA[]]></Text>
      </Expression>
      <Expression xsi:type="io:CsvWriter">
        <io:FileName>C:/BonsaiDataPredictiveProcessing/769904/769904_20251017T222126/orientations_orientations.csv</io:FileName>
        <io:Append>true</io:Append>
        <io:Overwrite>false</io:Overwrite>
        <io:Suffix>FileCount</io:Suffix>
        <io:IncludeHeader>true</io:IncludeHeader>
      </Expression>
    </Nodes>
    <Edges>
      <Edge From="0" To="1" Label="Source1" />
      <Edge From="1" To="2" Label="Source1" />
      <Edge From="2" To="3" Label="Source1" />
      <Edge From="3" To="4" Label="Source1" />
      <Edge From="5" To="6" Label="Source1" />
      <Edge From="6" To="7" Label="Source1" />
      <Edge From="6" To="10" Label="Source1" />
      <Edge From="7" To="9" Label="Source1" />
      <Edge From="8" To="9" Label="Source2" />
      <Edge From="9" To="12" Label="Source1" />
      <Edge From="10" To="11" Label="Source1" />
      <Edge From="11" To="12" Label="Source2" />
      <Edge From="12" To="13" Label="Source1" />
      <Edge From="13" To="15" Label="Source1" />
      <Edge From="14" To="15" Label="Source2" />
      <Edge From="16" To="17" Label="Source1" />
      <Edge From="17" To="18" Label="Source1" />
      <Edge From="18" To="22" Label="Source1" />
      <Edge From="19" To="20" Label="Source1" />
      <Edge From="20" To="21" Label="Source1" />
      <Edge From="21" To="22" Label="Source2" />
      <Edge From="22" To="26" Label="Source1" />
      <Edge From="23" To="25" Label="Source1" />
      <Edge From="24" To="25" Label="Source2" />
      <Edge From="25" To="26" Label="Source2" />
      <Edge From="26" To="27" Label="Source1" />
      <Edge From="27" To="28" Label="Source1" />
      <Edge From="28" To="29" Label="Source1" />
      <Edge From="29" To="30" Label="Source1" />
      <Edge From="30" To="31" Label="Source1" />
      <Edge From="32" To="33" Label="Source1" />
      <Edge From="34" To="35" Label="Source1" />
      <Edge From="35" To="36" Label="Source1" />
      <Edge From="36" To="37" Label="Source1" />
      <Edge From="37" To="38" Label="Source1" />
      <Edge From="38" To="39" Label="Source1" />
      <Edge From="41" To="43" Label="Source1" />
      <Edge From="42" To="43" Label="Source2" />
      <Edge From="43" To="45" Label="Source1" />
      <Edge From="44" To="45" Label="Source2" />
      <Edge From="45" To="46" Label="Source1" />
      <Edge From="46" To="47" Label="Source1" />
      <Edge From="47" To="48" Label="Source1" />
      <Edge From="48" To="49" Label="Source1" />
      <Edge From="49" To="50" Label="Source1" />
      <Edge From="50" To="51" Label="Source1" />
      <Edge From="52" To="54" Label="Source1" />
      <Edge From="53" To="54" Label="Source2" />
      <Edge From="54" To="55" Label="Source1" />
      <Edge From="56" To="57" Label="Source1" />
      <Edge From="57" To="58" Label="Source1" />
      <Edge From="58" To="59" Label="Source1" />
      <Edge From="60" To="61" Label="Source1" />
      <Edge From="61" To="62" Label="Source1" />
      <Edge From="61" To="63" Label="Source1" />
      <Edge From="62" To="64" Label="Source1" />
      <Edge From="63" To="64" Label="Source2" />
      <Edge From="64" To="65" Label="Source1" />
      <Edge From="65" To="66" Label="Source1" />
      <Edge From="67" To="68" Label="Source1" />
      <Edge From="70" To="72" Label="Source1" />
      <Edge From="71" To="72" Label="Source2" />
      <Edge From="72" To="73" Label="Source1" />
      <Edge From="73" To="74" Label="Source1" />
      <Edge From="74" To="75" Label="Source1" />
      <Edge From="77" To="78" Label="Source1" />
      <Edge From="78" To="81" Label="Source1" />
      <Edge From="79" To="80" Label="Source1" />
      <Edge From="80" To="81" Label="Source2" />
      <Edge From="81" To="82" Label="Source1" />
      <Edge From="82" To="83" Label="Source1" />
      <Edge From="83" To="84" Label="Source1" />
      <Edge From="84" To="86" Label="Source1" />
      <Edge From="85" To="86" Label="Source2" />
      <Edge From="86" To="89" Label="Source1" />
      <Edge From="87" To="88" Label="Source1" />
      <Edge From="88" To="89" Label="Source3" />
      <Edge From="89" To="90" Label="Source1" />
      <Edge From="89" To="93" Label="Source1" />
      <Edge From="90" To="92" Label="Source1" />
      <Edge From="91" To="92" Label="Source2" />
      <Edge From="92" To="93" Label="Source2" />
      <Edge From="93" To="94" Label="Source1" />
      <Edge From="94" To="95" Label="Source1" />
      <Edge From="95" To="96" Label="Source1" />
      <Edge From="97" To="98" Label="Source1" />
      <Edge From="98" To="99" Label="Source1" />
      <Edge From="99" To="100" Label="Source1" />
      <Edge From="101" To="103" Label="Source1" />
      <Edge From="102" To="103" Label="Source2" />
      <Edge From="103" To="104" Label="Source1" />
      <Edge From="104" To="105" Label="Source1" />
      <Edge From="105" To="106" Label="Source1" />
      <Edge From="106" To="107" Label="Source1" />
      <Edge From="107" To="108" Label="Source1" />
      <Edge From="108" To="113" Label="Source1" />
      <Edge From="109" To="110" Label="Source1" />
      <Edge From="110" To="113" Label="Source2" />
      <Edge From="111" To="112" Label="Source1" />
      <Edge From="112" To="113" Label="Source3" />
      <Edge From="113" To="114" Label="Source1" />
      <Edge From="114" To="115" Label="Source1" />
      <Edge From="115" To="116" Label="Source1" />
      <Edge From="116" To="117" Label="Source1" />
      <Edge From="118" To="122" Label="Source1" />
      <Edge From="119" To="120" Label="Source1" />
      <Edge From="120" To="121" Label="Source1" />
      <Edge From="121" To="122" Label="Source2" />
      <Edge From="122" To="123" Label="Source1" />
      <Edge From="123" To="126" Label="Source1" />
      <Edge From="124" To="125" Label="Source1" />
      <Edge From="125" To="126" Label="Source2" />
      <Edge From="127" To="132" Label="Source1" />
      <Edge From="128" To="129" Label="Source1" />
      <Edge From="129" To="130" Label="Source1" />
      <Edge From="130" To="132" Label="Source2" />
      <Edge From="131" To="132" Label="Source3" />
    </Edges>
  </Workflow>
</WorkflowBuilder>